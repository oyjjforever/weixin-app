{"version":3,"file":"detail.uvue_vue_type_style_index_0_lang.js","sources":["pages/template/list-news/detail/detail.uvue"],"sourcesContent":["<template>\r\n\r\n\r\n\r\n    <!-- 宽屏时不使用共享元素组件 -->\r\n    <view v-if=\"isWideScreen\">\r\n      <image class=\"banner-img\" :src=\"cover\"></image>\r\n      <text class=\"banner-title\">{{title}}</text>\r\n    </view>\r\n    <share-element v-else :share-key=\"shareKey\">\r\n      <view>\r\n        <image class=\"banner-img\" :src=\"btCover\"></image>\r\n        <text class=\"banner-title\">{{title}}</text>\r\n      </view>\r\n    </share-element>\r\n    <rich-text v-if=\"htmlNodes\" class=\"rich-text\" :nodes=\"htmlNodes\" mode=\"native\"></rich-text>\r\n\r\n\r\n\r\n</template>\r\n\r\n<script setup lang=\"uts\">\r\n  import { state } from '@/store/index.uts'\r\n\r\n  // 作为页面渲染时，props会接收url中的参数\r\n  // 作为组件使用时，可以正常传递props\r\n  const props = defineProps({\r\n    post_id: { type: String, default: '' },\r\n    cover: { type: String, default: '' },\r\n    title: { type: String, default: '' },\r\n    isWideScreen: { type: Boolean, default: false },\r\n    shareKey: { type: String, default: '' },\r\n    // list-news预加载传入的详情内容，仅用于宽屏第一个新闻\r\n    firstDetailContent: { type: String, default: '' }\r\n  })\r\n\r\n  const isDarkMode = computed(() => state.isDarkMode)\r\n  const htmlNodes = ref(\"\")\r\n  // 标记是否已经用过firstDetailContent\r\n  const usedContent = ref(false)\r\n  const btCover = ref(\"\")\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // 适配深色模式\r\n  function adaptContentForDarkMode(content: string): string {\r\n\r\n\r\n\r\n\r\n\r\n    return content\r\n  }\r\n\r\n  function getDetail(post_id: string) {\r\n    uni.request({\r\n      url: 'https://unidemo.dcloud.net.cn/api/news/36kr/' + post_id,\r\n      success: (data) => {\r\n        if (data.statusCode == 200) {\r\n          const result = data.data as UTSJSONObject\r\n          let content = result[\"content\"] as string\r\n          htmlNodes.value = adaptContentForDarkMode(content)\r\n        }\r\n      },\r\n      fail: () => {\r\n        uni.__f__('log','at pages/template/list-news/detail/detail.uvue:115','fail')\r\n      }\r\n    })\r\n  }\r\n\r\n  // 监听post_id变化，当id变化时加载数据\r\n  watch(():string => props.post_id, (newVal:string) => {\r\n    if (newVal != '') {\r\n      // 优先用传入的预载详情内容（只在第一个新闻时有值）\r\n      if (props.firstDetailContent !== '') {\r\n        let content = props.firstDetailContent\r\n        htmlNodes.value = adaptContentForDarkMode(content)\r\n        usedContent.value = true\r\n      } else {\r\n        getDetail(newVal)\r\n        usedContent.value = false\r\n      }\r\n    }\r\n  }, { immediate: true, deep: true })\r\n\r\n  // 只有没用过firstDetailContent时才赋值，防止重复\r\n  watch(():string => props.firstDetailContent, (newVal:string) => {\r\n    if (!usedContent.value && newVal !== '') {\r\n      let content = newVal\r\n      htmlNodes.value = adaptContentForDarkMode(content)\r\n      usedContent.value = true\r\n    }\r\n  })\r\n\r\n  onLoad(() => {\r\n    if (!props.isWideScreen) {\r\n      btCover.value = props.cover\r\n\r\n\r\n\r\n    }\r\n  })\r\n</script>\r\n\r\n<style>\r\n  .detail-container {\r\n    background-color: var(--background-color,#f8f8f8);\r\n  }\r\n  .banner {\r\n    height: 180px;\r\n    overflow: hidden;\r\n    position: relative;\r\n    background-color: var(--background-color,#f8f8f8);\r\n  }\r\n\r\n  .banner-img {\r\n    width: 100%;\r\n  }\r\n\r\n  .banner-title {\r\n    max-height: 42px;\r\n    overflow: hidden;\r\n    position: absolute;\r\n    left: 15px;\r\n    bottom: 15px;\r\n    width: 90%;\r\n    font-size: 16px;\r\n    font-weight: 400;\r\n    line-height: 21px;\r\n    color: white;\r\n  }\r\n\r\n  .rich-text {\r\n    padding: 3px 3px 0px;\r\n    color: var(--text-color,#333333);\r\n  }\r\n\r\n</style>\r\n"],"names":["computed","state","ref","uni","watch","onLoad"],"mappings":";;;;;;;;;;;;;;;AA0BE,UAAM,QAAQ;AAUKA,kBAAAA,SAAS,MAAM;AAAA,aAAAC,kBAAM;AAAA,IAAU,CAAA;AAClD,UAAM,YAAYC,kBAAI,EAAE;AAExB,UAAM,cAAcA,kBAAI,KAAK;AAC7B,UAAM,UAAUA,kBAAI,EAAE;AAsDtB,aAAS,wBAAwB,SAAe;AAM9C,aAAO;AAAA,IACT;AAEA,aAAS,UAAU,SAAe;AAChCC,oBAAAA,MAAI,QAAQ;AAAA,QACV,KAAK,iDAAiD;AAAA,QACtD,SAAS,CAAC,SAAI;AACZ,cAAI,KAAK,cAAc,KAAK;AAC1B,kBAAM,SAAS,KAAK;AACpB,gBAAI,UAAU,OAAO,SAAS;AAC9B,sBAAU,QAAQ,wBAAwB,OAAO;AAAA,UAClD;AAAA,QACF;AAAA,QACD,MAAM,MAAA;AACJA,wBAAAA,MAAI,MAAM,OAAM,sDAAqD,MAAM;AAAA,QAC7E;AAAA,MACD,CAAA;AAAA,IACH;AAGAC,kBAAK,MAAC,MAAa;AAAA,aAAA,MAAM;AAAA,IAAN,GAAe,CAAC,WAAa;AAC9C,UAAI,UAAU,IAAI;AAEhB,YAAI,MAAM,uBAAuB,IAAI;AACnC,cAAI,UAAU,MAAM;AACpB,oBAAU,QAAQ,wBAAwB,OAAO;AACjD,sBAAY,QAAQ;AAAA,QACrB,OAAM;AACL,oBAAU,MAAM;AAChB,sBAAY,QAAQ;AAAA,QACrB;AAAA,MACF;AAAA,IACF,GAAE,EAAE,WAAW,MAAM,MAAM,KAAM,CAAA;AAGlCA,kBAAK,MAAC,MAAa;AAAA,aAAA,MAAM;AAAA,IAAN,GAA0B,CAAC,WAAa;AACzD,UAAI,CAAC,YAAY,SAAS,WAAW,IAAI;AACvC,YAAI,UAAU;AACd,kBAAU,QAAQ,wBAAwB,OAAO;AACjD,oBAAY,QAAQ;AAAA,MACrB;AAAA,IACH,CAAC;AAEDC,kBAAAA,OAAO,MAAA;AACL,UAAI,CAAC,MAAM,cAAc;AACvB,gBAAQ,QAAQ,MAAM;AAAA,MAIvB;AAAA,IACH,CAAC;;;;;;;;;;;;;;;;;;;;;"}