{"version":3,"file":"uni-recycle-view.js","sources":["uni_modules/uni-recycle-view/components/uni-recycle-view/uni-recycle-view.uvue","../../../Program Files/HBuilderX/plugins/uniapp-cli-vite/uniComponent:/VzovV29ya3BsYWNlLzIu5bCP56iL5bqPL2xpaGFpLWFwcC91bmlfbW9kdWxlcy91bmktcmVjeWNsZS12aWV3L2NvbXBvbmVudHMvdW5pLXJlY3ljbGUtdmlldy91bmktcmVjeWNsZS12aWV3LnV2dWU"],"sourcesContent":["<template>\r\n  <scroll-view class=\"uni-recycle-view-main\" ref=\"scroll\" :type=\"type\" :direction=\"direction\"\r\n    :associative-container=\"associativeContainer\" :enable-back-to-top=\"enableBackToTop\" :bounces=\"bounces\"\r\n    :upper-threshold=\"upperThreshold\" :lower-threshold=\"lowerThreshold\" :scroll-top=\"scrollTop\"\r\n    :scroll-left=\"scrollLeft\" :scroll-into-view=\"scrollIntoView\" :scroll-with-animation=\"scrollWithAnimation\"\r\n    :refresher-enabled=\"refresherEnabled\" :refresher-threshold=\"refresherThreshold\"\r\n    :refresher-max-drag-distance=\"refresherMaxDragDistance\" :refresher-default-style=\"refresherDefaultStyle\"\r\n    :refresher-background=\"refresherBackground\" :refresher-triggered=\"refresherTriggered\"\r\n    :show-scrollbar=\"showScrollbar\" :custom-nested-scroll=\"customNestedScroll\" :nested-scroll-child=\"nestedScrollChild\"\r\n    @scroll=\"onScroll\" @scrollend=\"onScrollEnd\" @scrolltolower=\"onScrollToLower\" @scrolltoupper=\"onScrollToUpper\"\r\n    @refresherabort=\"onRefresherAbort\" @refresherpulling=\"onRefresherPulling\" @refresherrefresh=\"onRefresherRefresh\"\r\n    @refresherrestore=\"onRefresherRestore\">\r\n    <view :style=\"{ height: placeholderHeight + 'px' }\" class=\"uni-recycle-view-placeholder\">\r\n      <view :style=\"{ transform: 'translateY(' + containerTop + 'px)' }\" class=\"uni-recycle-view-container\">\r\n        <slot :items=\"items\"></slot>\r\n      </view>\r\n    </view>\r\n  </scroll-view>\r\n</template>\r\n\r\n<script lang=\"uts\">\r\n  /**\r\n * 使用限制\r\n * - 容器大小变动时未刷新缓存的子元素大小\r\n * - 不支持设置初始滚动位置\r\n * - list数据内每一项不可以是基础类型\r\n * - item不支持设置margin，会导致计算位置不准确\r\n */\r\n  /**\r\n   * recycle-view 虚拟长列表组件\r\n   * @description 用于超长列表的展示\r\n   * @property {any[]} list 列表所有数据\r\n   */\r\n  export default {\r\n    name: \"uni-recycle-view\",\r\n    props: {\r\n      type: {\r\n        type: String,\r\n        default: ''\r\n      },\r\n      direction: {\r\n        type: String,\r\n        default: 'vertical'\r\n      },\r\n      associativeContainer: {\r\n        type: String,\r\n        default: ''\r\n      },\r\n      enableBackToTop: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      bounces: {\r\n        type: Boolean,\r\n        default: true\r\n      },\r\n      upperThreshold: {\r\n        type: Number,\r\n        default: 50\r\n      },\r\n      lowerThreshold: {\r\n        type: Number,\r\n        default: 50\r\n      },\r\n      scrollTop: {\r\n        type: Number,\r\n        default: 0\r\n      },\r\n      scrollLeft: {\r\n        type: Number,\r\n        default: 0\r\n      },\r\n      scrollIntoView: {\r\n        type: String,\r\n        default: ''\r\n      },\r\n      scrollWithAnimation: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      refresherEnabled: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      refresherThreshold: {\r\n        type: Number,\r\n        default: 45\r\n      },\r\n      refresherMaxDragDistance: {\r\n        type: Number\r\n      },\r\n      refresherDefaultStyle: {\r\n        type: String,\r\n        default: 'black'\r\n      },\r\n      refresherBackground: {\r\n        type: String,\r\n        default: 'transparent'\r\n      },\r\n      refresherTriggered: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      showScrollbar: {\r\n        type: Boolean,\r\n        default: true\r\n      },\r\n      customNestedScroll: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      nestedScrollChild: {\r\n        type: String,\r\n        default: ''\r\n      },\r\n      list: {\r\n        type: Array as PropType<any[]>,\r\n        default: [] as any[]\r\n      },\r\n      itemHeight: {\r\n        type: Number,\r\n        default: 0\r\n      }\r\n    },\r\n    emits: [\r\n      'scroll',\r\n      'scrollend',\r\n      'scrolltolower',\r\n      'scrolltoupper',\r\n      'refresherabort',\r\n      'refresherpulling',\r\n      'refresherrefresh',\r\n      'refresherrestore',\r\n    ],\r\n    watch: {\r\n      list: {\r\n        handler(list : any[]) {\r\n          this.cachedSize.forEach((_ : number, key : any) => {\r\n            if (!list.includes(key)) {\r\n              this.cachedSize.delete(key)\r\n            }\r\n          })\r\n        },\r\n        deep: true\r\n      }\r\n    },\r\n    computed: {\r\n      realDefaultItemSize() {\r\n        return this.itemHeight != 0 ? this.itemHeight : this.defaultItemSize\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        items: [] as any[],\r\n        containerTop: 0,\r\n        scrollElementHeight: 0,\r\n        placeholderHeight: 0,\r\n        offsetThreshold: [0, 0, 0, 0], // -5, -3, 3, 5 屏对应的offset\r\n        cachedSize: new Map<any, number>(),\r\n        initialized: false,\r\n        defaultItemSize: 80,\r\n        lastScrollTop: 0,\r\n        rearrangeQueue: [] as number[]\r\n      };\r\n    },\r\n    provide() {\r\n      return {\r\n        itemHeight: this.itemHeight,\r\n        setCachedSize: (item : any, size : number) => {\r\n          if (this.itemHeight != 0) {\r\n            return\r\n          }\r\n          if (this.cachedSize.size == 0) {\r\n            this.defaultItemSize = size\r\n          } else {\r\n            this.defaultItemSize = ((this.cachedSize.size - 1) * this.defaultItemSize + size) / this.cachedSize.size\r\n          }\r\n          this.cachedSize.set(item, size)\r\n        },\r\n        getCachedSize: (item : any) => {\r\n          return this.cachedSize.get(item)\r\n        }\r\n      }\r\n    },\r\n    created() {\r\n      if (this.itemHeight != 0) {\r\n        this.defaultItemSize = this.itemHeight\r\n      }\r\n      if (this.list.length > 0) {\r\n        this.placeholderHeight = this.list.length * this.realDefaultItemSize\r\n      }\n      this.scrollElementHeight = uni.getWindowInfo().screenHeight\n      this.rearrange(0)\r\n    },\r\n    mounted() {\r\n      this.$nextTick(() => {\r\n        uni.createSelectorQuery().in(this).select('.uni-recycle-view-main').boundingClientRect().exec((ret) => {\r\n          this.scrollElementHeight = (ret[0] as NodeInfo).height!\r\n          this.initialized = true\r\n        })\r\n      })\r\n    },\r\n    methods: {\r\n      onScrollEnd(e : UniScrollEvent) {\r\n        this.$emit('scrollend', e)\r\n      },\r\n      onScrollToLower(e : UniScrollToLowerEvent) {\r\n        this.$emit('scrolltolower', e)\r\n      },\r\n      onScrollToUpper(e : UniScrollToUpperEvent) {\r\n        this.$emit('scrolltoupper', e)\r\n      },\r\n      onRefresherAbort(e : UniRefresherEvent) {\r\n        this.$emit('refresherabort', e)\r\n      },\r\n      onRefresherPulling(e : UniRefresherEvent) {\r\n        this.$emit('refresherpulling', e)\r\n      },\r\n      onRefresherRefresh(e : UniRefresherEvent) {\r\n        this.$emit('refresherrefresh', e)\r\n      },\r\n      onRefresherRestore(e : UniRefresherEvent) {\r\n        this.$emit('refresherrestore', e)\r\n      },\r\n      onScroll(e : UniScrollEvent) {\r\n        this.$emit('scroll', e)\r\n        if (!this.initialized) {\r\n          return\r\n        }\r\n        const scrollTop = e.detail.scrollTop\r\n        if (scrollTop === this.lastScrollTop || scrollTop < 0) {\r\n          return\r\n        }\r\n        this.lastScrollTop = scrollTop\r\n        if (scrollTop < this.offsetThreshold[1] || scrollTop > this.offsetThreshold[2]) {\r\n          this.queue(scrollTop)\r\n        }\r\n      },\r\n      queue(scrollTop : number) {\r\n        /*\r\n         * rearrange内为大量同步逻辑，在上次rearrange未执行完毕的情况下将后续多个rearrange合并成一次执行，即仅执行最后一次\r\n         * 如何测试：push后uni.__f__('log','at uni_modules/uni-recycle-view/components/uni-recycle-view/uni-recycle-view.uvue:242',this.rearrangeQueue.length) 输出结果大于1时触发优化\r\n         */\r\n        this.rearrangeQueue.push(scrollTop)\r\n        setTimeout(() => {\r\n          this.flush()\r\n        }, 50)\r\n      },\r\n      flush() {\r\n        const queueLength = this.rearrangeQueue.length\r\n        if (queueLength == 0) {\r\n          return\r\n        }\r\n        const lastScrollTop = this.rearrangeQueue[queueLength - 1]\r\n        this.rearrange(lastScrollTop)\r\n        this.rearrangeQueue = [] as number[]\r\n      },\r\n      calcItemTotalSize(startIndex : number, endIndex : number) {\r\n        let totalSize = 0\r\n        for (let i = startIndex; i <= endIndex; i++) {\r\n          const item = this.list[i]\r\n          totalSize += (this.cachedSize.get(item) ?? this.realDefaultItemSize)\r\n        }\r\n        return totalSize\r\n      },\r\n      rearrange(scrollTop : number) {\r\n        this.offsetThreshold[0] = Math.max(scrollTop - this.scrollElementHeight * 7, 0)\r\n        this.offsetThreshold[1] = Math.max(scrollTop - this.scrollElementHeight * 5, 0)\r\n        this.offsetThreshold[2] = Math.min(scrollTop + this.scrollElementHeight * 6, this.placeholderHeight)\r\n        this.offsetThreshold[3] = Math.min(scrollTop + this.scrollElementHeight * 8, this.placeholderHeight)\r\n        const offsetStart = this.offsetThreshold[0]\r\n        const offsetEnd = this.offsetThreshold[3]\r\n        const defaultItemSize = this.realDefaultItemSize\r\n        const cachedSize = this.cachedSize\r\n        const list = this.list\r\n        let tempTotalHeight = 0\r\n        let containerTop = 0\r\n        let startIndex = -1, endIndex = -1\r\n        for (let i = 0; i < list.length; i++) {\r\n          const item = list[i]\r\n          let itemSize = defaultItemSize\r\n          const cachedItemSize = cachedSize.get(item)\r\n          if (cachedItemSize != null) {\r\n            itemSize = cachedItemSize\r\n          }\r\n          tempTotalHeight += itemSize\r\n          if (endIndex > -1) {\r\n            continue\r\n          }\r\n          if (tempTotalHeight < offsetStart) {\r\n            containerTop = tempTotalHeight\r\n          } else if (tempTotalHeight >= offsetStart && tempTotalHeight <= offsetEnd) {\r\n            if (startIndex == -1) {\r\n              startIndex = i\r\n            }\r\n          } else {\r\n            if (endIndex == -1) {\r\n              endIndex = i - 1\r\n            }\r\n          }\r\n        }\r\n        if (startIndex == -1) {\r\n          startIndex = 0\r\n        }\r\n        if (endIndex == -1) {\r\n          endIndex = this.list.length - 1\r\n        }\r\n        this.placeholderHeight = Math.max(tempTotalHeight, this.scrollElementHeight)\r\n        this.items = this.list.slice(startIndex, endIndex + 1)\r\n        this.containerTop = containerTop\r\n        this.$nextTick(() => {\r\n          /**\r\n           * 加载下一屏时下一屏的item大小为预估大小，因此可能出现已渲染的高度不到加载下一页的阈值。此处逻辑将阈值调整到可见范围内。\r\n           */\r\n          const expectedOffsetBottom = this.containerTop + this.calcItemTotalSize(startIndex, endIndex)\n          if(this.placeholderHeight < expectedOffsetBottom) {\n            this.placeholderHeight = expectedOffsetBottom\n          }\r\n          if (expectedOffsetBottom < this.offsetThreshold[2] + this.scrollElementHeight) {\r\n            this.offsetThreshold[2] = expectedOffsetBottom - this.scrollElementHeight\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .uni-recycle-view-placeholder {\r\n    position: relative;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .uni-recycle-view-container {\r\n    position: absolute;\r\n    width: 100%;\r\n  }\r\n</style>\n","import Component from 'W:/Workplace/2.小程序/lihai-app/uni_modules/uni-recycle-view/components/uni-recycle-view/uni-recycle-view.uvue'\nwx.createComponent(Component)"],"names":["defineComponent","uni"],"mappings":"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"}