{"version":3,"file":"index.js","sources":["uni_modules/uni-stat/utssdk/common/utils/index.uts"],"sourcesContent":["// AppShowReportParams, AppHideReportParams, PageReportParams,\r\nimport { StatDefault } from '../../interface.uts'\r\n\r\nimport { AppShowParamsKeys, AppHideParamsKeys, PageShowParamsKeys, PushParamsKeys, EventParamsKeys, ErrorParamsKeys,CrashParamsKeys } from '../core/stat-type.uts'\r\n\r\n/**\r\n * 序列化url参数\r\n * @param {Object} obj\r\n * @example  \r\n */\r\nexport function Serialize(obj : UTSJSONObject) : string {\r\n\tlet str : string[] = [];\r\n\tfor (let p in obj) {\r\n\t\tif (obj.hasOwnProperty(p)) {\r\n\t\t\tlet key = obj[p]\r\n\t\t\tif (obj[p] == null) {\r\n\t\t\t\tkey = ''\r\n\t\t\t}\r\n\t\t\tconst text = p + \"=\" + key\r\n\t\t\tstr.push(text);\r\n\t\t}\r\n\t}\r\n\treturn \"?\" + str.join(\"&\");\r\n}\r\n\r\nexport function IsNumber(value : any | null) : boolean {\r\n\treturn typeof value === 'number';\r\n\t// if (value.trim() === \"\") {\r\n\t// \treturn false;\r\n\t// }\r\n\t// const num = parseInt(value);\r\n\t// if (isNaN(num)) {\r\n\t// \treturn false;\r\n\t// }\r\n\t// return true;\r\n}\r\n\r\n/**\r\n * 上报参数过滤\r\n */\r\nexport function FilterParam<T>(keys : string[] = [], data : StatDefault) : T {\r\n\tlet result = {};\r\n\tkeys.forEach(key => {\r\n\t\tresult[key] = data[key];\r\n\t});\r\n\tlet formdata : T = result as T\r\n\treturn formdata;\r\n}\r\n\r\n\r\n/**\r\n * 日志输出\r\n * @param {StatDefault} data 统计数据\r\n * @param {Boolean} type 打印类型，如果是type=true ，则是最终上报数据\r\n */\r\nexport function Log(data : StatDefault, type : Boolean = false) {\r\n\r\n\tlet logData = getEventData(data.lt!, data)\r\n\tlet msg_type : string = ''\r\n\r\n\tswitch (data.lt) {\r\n\t\tcase '1':\r\n\t\t\tmsg_type = '应用启动'\r\n\t\t\tbreak\r\n\t\tcase '3':\r\n\t\t\tmsg_type = '应用进入后台'\r\n\t\t\tbreak\r\n\r\n\t\tcase '11':\r\n\t\t\tmsg_type = '页面切换'\r\n\t\t\tbreak\r\n\t\tcase '21':\r\n\t\t\tmsg_type = '事件触发'\r\n\t\t\tbreak\r\n\t\tcase '31':\r\n\t\t\tmsg_type = '应用错误'\r\n\t\t\tbreak\n\t\tcase '41':\n\t\t\tmsg_type = '应用崩溃'\n\t\t\tbreak\r\n\t\tcase '101':\r\n\t\t\tmsg_type = 'PUSH'\r\n\t\t\tbreak\r\n\t}\r\n\r\n\tif (type) {\r\n\t\tconsole.log(`=== 统计队列数据上报 :`, logData)\r\n\t\t// console.log(logData)\r\n\t\t// console.log(`=== 上报结束 ===`)\r\n\t\treturn\r\n\t}\r\n\r\n\tif (msg_type != '') {\r\n\t\tconsole.log(`=== 统计数据采集：${msg_type} :`,logData)\r\n\t\t// console.log(logData)\r\n\t\t// console.log(`=== 采集结束 ===`)\r\n\t}\r\n}\r\n\r\n/**\r\n * map 转 string\r\n */\r\nexport function Map2String(statData : Map<string, StatDefault[]>) : string {\r\n\tlet statDataJson = {}\r\n\tstatData.forEach((rd : StatDefault[], key : string) => {\r\n\t\tstatDataJson[key] = rd\r\n\t});\r\n\treturn JSON.stringify(statDataJson)\r\n}\r\n\r\nexport function Map2Json(statData : Map<string, StatDefault[]>) : UTSJSONObject {\r\n\tlet statDataJson = {}\r\n\tstatData.forEach((rd : StatDefault[], key : string) => {\r\n\t\tlet arr : object[] = [];\r\n\t\trd.forEach((elm : StatDefault) => {\r\n\t\t\tlet data = getEventData(key, elm)\r\n\r\n\t\t\tarr.push(data)\r\n\t\t})\r\n\r\n\t\tstatDataJson[key] = arr\r\n\r\n\t});\r\n\r\n\treturn statDataJson\r\n}\r\n\r\n\r\n\r\n/**\r\n * 处理上报参数\r\n * @param {Object}  statData 需要处理的数据\r\n */\r\nexport const handle_data = (statData : Map<string, StatDefault[]>) : string => {\r\n\tlet firstArr : any[] = []\r\n\tlet contentArr : any[] = []\r\n\tlet lastArr : any[] = []\r\n\tstatData.forEach((rd : StatDefault[], key : string) => {\r\n\t\trd.forEach((elm : StatDefault) => {\r\n\t\t\tlet data = getEventData(key, elm)\r\n\t\t\tif (key == '1') {\r\n\t\t\t\tfirstArr.push(data)\r\n\t\t\t} else if (key == '4') {\r\n\t\t\t\tlastArr.push(data)\r\n\t\t\t} else {\r\n\t\t\t\tcontentArr.push(data)\r\n\t\t\t}\r\n\t\t})\r\n\t});\r\n\tfirstArr.push(...contentArr, ...lastArr)\r\n\treturn JSON.stringify(firstArr)\r\n}\r\n\r\n/**\r\n * 获取具体的上报参数对象\r\n */\r\nfunction getEventData(lt : string, elm : StatDefault) : any {\r\n\tlet data : any = {}\r\n\tswitch (lt) {\r\n\t\tcase '1'://应用启动\r\n\t\t\tdata = FilterParam(AppShowParamsKeys, elm)\r\n\t\t\tbreak\r\n\t\tcase '3': // 应用进入后台\r\n\t\t\tdata = FilterParam(AppHideParamsKeys, elm)\r\n\t\t\tbreak\r\n\t\tcase '11': //页面切换\r\n\t\t\tdata = FilterParam(PageShowParamsKeys, elm)\r\n\t\t\tbreak\r\n\t\tcase '21': // 事件触发\r\n\t\t\tdata = FilterParam(EventParamsKeys, elm)\r\n\t\t\tbreak\r\n\t\tcase '31': // 应用错误\r\n\t\t\tdata = FilterParam(ErrorParamsKeys, elm)\n\t\t\tbreak\n\t\tcase '41': // 崩溃\n\t\t\tdata = FilterParam(CrashParamsKeys, elm)\r\n\t\t\tbreak\r\n\t\tcase '101': // PUSH\r\n\t\t\tdata = FilterParam(PushParamsKeys, elm)\r\n\t\t\tbreak\r\n\t}\r\n\r\n\treturn data\r\n}"],"names":["uni","AppShowParamsKeys","AppHideParamsKeys","PageShowParamsKeys","EventParamsKeys","ErrorParamsKeys","CrashParamsKeys","PushParamsKeys"],"mappings":"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"}