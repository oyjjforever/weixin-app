{"version":3,"file":"stat.js","sources":["uni_modules/uni-stat/utssdk/common/core/stat.uts"],"sourcesContent":["\r\nimport { Report } from \"./report.uts\";\r\nimport { StatType } from \"./stat-type\";\r\nimport { EventParams, UniStatOptions, ErrorCallback, ReportErrorCode } from '../../interface.uts'\r\nimport { is_page, is_page_report, get_space, calibration, get_crash_logs } from '../utils/pageInfo.uts'\r\nimport { Config } from \"../config\";\r\n\r\nconst reportInstance = new Report()\r\n\r\nexport class Stat {\r\n  static __stat_instance : Stat | null = null;\r\n  static is_register : boolean = false\r\n  static no_space : boolean = false\r\n  // 上报逻辑实例\r\n  // 使用单例，只初始化一次\r\n  static getInstance() : Stat {\r\n    // 获取服务空间配置信息\r\n    let space = get_space(uniCloud.config)\r\n    if (Report.uniCloudInstance == null) {\r\n      // 判断不为空对象\r\n      if (space != null) {\r\n        // 重新构造 uniCloud\r\n        let spaceData : UniCloudInitOptions = {\r\n          provider: space.provider,\r\n          spaceId: space.spaceId,\r\n          clientSecret: space.clientSecret,\r\n        }\r\n        const endpoint = space.endpoint\r\n        if (endpoint != null) {\r\n          spaceData.endpoint = space.endpoint\r\n        }\r\n\r\n        // 支付宝单独处理一些参数\r\n        if (space.provider == 'alipay') {\r\n          spaceData.secretKey = space.secretKey\r\n          spaceData.accessKey = space.accessKey\r\n          spaceData.spaceAppId = space.spaceAppId\r\n        }\r\n\r\n        // 初始化 uniCloud\r\n        // @ts-ignore\r\n        Report.uniCloudInstance = uniCloud.init(spaceData)\r\n\r\n      } else {\r\n        if (!Stat.no_space) {\r\n          // #ifdef APP-IOS\r\n          console.error('应用已集成uni统计，但未关联服务空间，请在uniCloud目录右键关联服务空间')\r\n          // #endif\r\n          // #ifndef APP-IOS\r\n          console.log(\"\\u001b[31m应用已集成uni统计，但未关联服务空间，请在uniCloud目录右键关联服务空间\\u001b[0m\")\r\n          // #endif\r\n          Stat.no_space = true\r\n        }\r\n      }\r\n    }\r\n\r\n    // 实例化统计sdk ，要在 实例 unicloud 之后进行，避免 Report 无法拿到 uniCloud 实例\r\n    if (this.__stat_instance == null) {\r\n      this.__stat_instance = new Stat()\r\n    }\r\n\r\n    return this.__stat_instance as Stat\r\n  }\r\n\r\n\r\n  // 当前生命周期内的页面或应用实例\r\n  appInstance ?: Page | null = null\r\n\r\n  private isHide : boolean = false\r\n  constructor() { }\r\n\r\n  /**\r\n   * 初始化插件参数\r\n   * @param {Object} options\r\n   */\r\n  init(options : UTSJSONObject) {\r\n    // 插件挂载玩成，可以进行后续操作\r\n    Stat.is_register = true\r\n    // 参数处理\r\n    Config.setOptions({ ...options } as UniStatOptions)\r\n    const uniStatConfig = Config.getOptions()\r\n\r\n    // 设置上报周期时间\r\n    reportInstance.eportInterval = uniStatConfig.reportInterval ?? 10\r\n\r\n    // #ifdef APP-ANDROID || APP-IOS\n    // 获取崩溃日志\r\n    get_crash_logs((logs) => {\r\n      this.registerEvent(StatType.Crash, null, logs)\r\n    })\r\n    // #endif\r\n  }\r\n  /**\r\n   * 应用启动\r\n   * @param {OnLaunchOptions} options 应用参数\r\n   * @param {ComponentPublicInstance} appInstance 应用实例\r\n   */\r\n  // options : OnLaunchOptions, appInstance : ComponentPublicInstance\r\n  onLaunch(options : OnLaunchOptions, appInstance : ComponentPublicInstance) {\r\n    // 注册事件 onLaunch ,需要手动触发\r\n    // this.registerEvent(StatType.LifeCycleLaunch, appInstance, options as any)\r\n  }\r\n  /**\r\n   * 页面加载\r\n   * @param {ComponentPublicInstance} appInstance 应用实例\r\n   */\r\n  onLoad(appInstance : Page) {\r\n    this.registerEvent(StatType.LifeCycleLoad, appInstance)\r\n  }\r\n  /**\r\n   * 显示页面或应用进入前台\r\n   * @param {ComponentPublicInstance} appInstance 应用实例\r\n   */\r\n  onShow(appInstance : Page) {\r\n    this.isHide = false\r\n    // @ts-ignore\r\n    const mptype = is_page(appInstance)\r\n    // 页面执行，应用需要手动调用\r\n    if (mptype) {\r\n      this.registerEvent(StatType.LifeCyclePageShow, appInstance, null)\r\n    }\r\n    // const life_type = mptype == 'app' ? StatType.LifeCycleAppShow : StatType.LifeCyclePageShow\r\n    // this.registerEvent(life_type, appInstance, null)\r\n  }\r\n\r\n  /**\r\n   * 页面隐藏或应用进入后台\r\n   * @param {ComponentPublicInstance} appInstance 应用实例\r\n   */\r\n  onHide(appInstance : Page) {\r\n\r\n    this.isHide = true\r\n    // @ts-ignore\r\n    const mptype = is_page(appInstance)\r\n\r\n    // 页面执行，应用需要手动调用\r\n    if (mptype) {\r\n      this.registerEvent(StatType.LifeCyclePageHide, appInstance, null)\r\n    }\r\n    // const life_type = mptype == 'app' ? StatType.LifeCycleAppHide : StatType.LifeCyclePageHide\r\n    // this.registerEvent(life_type, appInstance, null)\r\n  }\r\n\r\n  /**\r\n   * 卸载页面\r\n   * @param {ComponentPublicInstance} appInstance 应用实例\r\n   */\r\n  onUnload(appInstance : Page) {\r\n    // 如果 isHide 为true 说明页面隐藏了，不走卸载逻辑，如果走卸载逻辑，isHide 必不可能是true\r\n    if (this.isHide) {\r\n      this.isHide = false\r\n      return\r\n    }\r\n    this.registerEvent(StatType.LifeCyclePageUnLoad, appInstance, null)\r\n  }\r\n\r\n  /**\r\n   * 错误\r\n   * @param {String} error 应用实例\r\n   */\r\n  onError(error : string) {\r\n    // 单独处理错误上报\r\n    this.error(error)\r\n  }\r\n\r\n  /**\r\n   * 获取推送ID\r\n   */\r\n  // pushEvent(options : any) {\r\n  //   // TODO uni x 暂不支持，如需要开启，请放开注释\r\n  //   const ClientID = is_push_clientid()\r\n  //   if (ClientID) {\r\n  //     uni.getPushClientId({\r\n  //       success: (res) => {\r\n  //         const cid = res.cid\r\n  //         //  只有获取到才会上传\r\n  //         // if (cid != null) {\r\n  //         reportInstance.sendPushRequest(options, cid)\r\n  //         // }\r\n  //       },\r\n  //     } as GetPushClientIdOptions)\r\n  //   }\r\n  // }\r\n\r\n  /**\r\n   * 注册事件\r\n   * @param {number} EventType 事件类型\r\n   * @param {Page} appInstance\t当前页面实例\r\n   * @param {UTSJSONObject} options 应用参数\r\n   */\r\n  registerEvent(EventType : number, appInstance : Page | null, options : any | null = null, error : any | null = '') {\r\n    const statConfig = Config.getOptions()\r\n    if (statConfig.enable == false) return\n\t\t// TODO 之前想的是，可能其他地方可能会用到 vue 实例 ，但是实际上在安卓上会有泄露问题，如果用到，需要在看实际方案\r\n    // this.appInstance = appInstance\r\n    // 是否要上报页面数据\r\n    const isPageReport = is_page_report()\r\n    switch (EventType) {\r\n      case StatType.LifeCycleLaunch:\r\n        // 使用非空断言，options在这里肯定非空\r\n        reportInstance.launch(options!)\r\n        // this.pushEvent(options)\r\n        break\r\n      case StatType.LifeCycleAppShow:\r\n        // TODO 目前只兼容 web 和 app ，小程序等平台需要调用 api onAppHide\r\n        reportInstance.appShow()\r\n        break\r\n      case StatType.LifeCycleAppHide:\r\n        reportInstance.appHide(true)\r\n        break\r\n      case StatType.LifeCycleLoad:\r\n        break\r\n      case StatType.LifeCyclePageShow:\r\n        if (isPageReport) {\r\n          reportInstance.pageShow(appInstance!)\r\n        }\r\n        break\r\n      case StatType.LifeCyclePageHide:\r\n        if (isPageReport) {\r\n          reportInstance.pageHide(appInstance!)\r\n        }\r\n        break\r\n      case StatType.LifeCyclePageUnLoad:\r\n        if (isPageReport) {\r\n          reportInstance.pageHide(appInstance!)\r\n        }\r\n        break\r\n      case StatType.LifeCycleError:\r\n        if (error != null) {\r\n          reportInstance.appError(error)\r\n        }\r\n        break\r\n      case StatType.Crash:\r\n        reportInstance.appCrash(options as string[])\r\n        break\r\n    }\r\n  }\r\n\r\n  error(em : string) {\r\n    // 生命周期监听，暂时无用，需要手动调用api\r\n  }\r\n  // 自定义参数上报\r\n  appEvent(name : string, options : any | null = null, fn : ErrorCallback) {\r\n    const statConfig = Config.getOptions()\r\n    if (statConfig.enable == false) return\r\n    if (Stat.no_space) {\r\n      fn(false, 61000 as ReportErrorCode)\r\n      return\r\n    }\r\n    if (!Stat.is_register) {\r\n      fn(false, 61001 as ReportErrorCode)\r\n      return\r\n    }\r\n    // const names = ['uni-app-launch', 'uni-app-show', 'uni-app-hide', 'uni-app-error']\r\n    // if (names.indexOf(name) <= -1) {\r\n    // \t// console.error('uniStatReport 事件名不存在，请检查！');\r\n    // \tfn(false, 'uniStatReport 事件名不存在，请检查！')\r\n    // \treturn\r\n    // }\r\n    if (name == 'uni-app-launch' && options == null) {\r\n      fn(false, 61002 as ReportErrorCode)\r\n      return\r\n    }\r\n\r\n    if (name == 'uni-app-launch') {\r\n      this.registerEvent(StatType.LifeCycleLaunch, null, options)\r\n      // 61001 占位，无实际用途\r\n      fn(true, 61001 as ReportErrorCode)\r\n      return\r\n    }\r\n    if (name == 'uni-app-show') {\r\n      this.registerEvent(StatType.LifeCycleAppShow, null, null)\r\n      // 61001 占位，无实际用途\r\n      fn(true, 61001 as ReportErrorCode)\r\n      return\r\n    }\r\n    if (name == 'uni-app-hide') {\r\n      this.registerEvent(StatType.LifeCycleAppHide, null, null)\r\n      // 61001 占位，无实际用途\r\n      fn(true, 61001 as ReportErrorCode)\r\n      return\r\n    }\r\n\r\n    if (name == 'uni-page-show') {\r\n      reportInstance.pageShow(options as Page)\r\n      // 61001 占位，无实际用途\r\n      fn(true, 61001 as ReportErrorCode)\r\n      return\r\n    }\r\n\r\n    if (name == 'uni-page-hide') {\r\n      reportInstance.pageHide(options as Page)\r\n      // 61001 占位，无实际用途\r\n      fn(true, 61001 as ReportErrorCode)\r\n      return\r\n    }\r\n\r\n    if (name == 'uni-app-error') {\r\n      this.registerEvent(StatType.LifeCycleError, null, null, options)\r\n      // 61001 占位，无实际用途\r\n      fn(true, 61001 as ReportErrorCode)\r\n      return\r\n    }\r\n\r\n    // 校验 type 参数\r\n    const is_calibration = calibration(name, options)\r\n    if (is_calibration != null) {\r\n      fn(false, is_calibration)\r\n      return\r\n    }\r\n\r\n    if (name === 'title') {\r\n      reportInstance._navigationBarTitle.report = (options as string)\r\n    }\r\n\r\n    const value = (typeof options === 'object' ? JSON.stringify(options) : options) as string\r\n    const data : EventParams = {\r\n      key: name,\r\n      value: value as string,\r\n    }\r\n    reportInstance.sendEventRequest(data)\r\n    // 61001 占位，无实际用途\r\n    fn(true, 61001 as ReportErrorCode)\r\n  }\r\n}\n"],"names":["Report","get_space","uniCloud","uni","Config","UniStatOptions","StatType","is_page","is_page_report","calibration","EventParams"],"mappings":"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"}