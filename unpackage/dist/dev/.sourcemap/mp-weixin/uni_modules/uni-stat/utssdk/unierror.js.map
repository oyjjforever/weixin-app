{"version":3,"file":"unierror.js","sources":["uni_modules/uni-stat/utssdk/unierror.uts"],"sourcesContent":["import { ReportErrorCode, ReportError } from \"./interface.uts\"\n\n/**\n * 错误主题\n */\nexport const ReportUniErrorSubject = 'uni-report';\n\n\n/**\n * 错误码\n * @UniError\n */\nexport const ReportUniErrors:Map<number, string> = new Map([\n  /**\n   * 已集成uni统计，但未关联服务空间\n   */\n  [61000, '应用已集成uni统计，但未关联服务空间，请在uniCloud目录右键关联服务空间!'],\n  /**\n   * 统计已集成，但未初始化\n   */\n  [61001, '统计服务尚未初始化，请在main.uts中引入统计插件！'],\n  /**\n   * 调用失败\n   */\n  [61002, 'uni-app-launch 下 options 参数必填，请检查！'],\n  [61003, 'Report的 name参数必填'],\n  [61004, 'Report的name参数类型必须为字符串'],\n  [61005, 'Report的name参数长度最大为255'],\n  [61006, 'Report的options参数只能为String或者Object类型'],\n  [61007, 'Report的options参数若为String类型，则长度最大为255'],\n  [61008, 'Report的name参数为title时，options参数类型只能为String'],\n]);\n\n/**\n * ReportFail的实现\n */\nexport class ReportFailImpl extends UniError implements ReportError {\n\toverride errCode: ReportErrorCode\n  constructor (\n    errCode: ReportErrorCode\n  ) {\n    super()\n    this.errSubject = ReportUniErrorSubject\n    this.errCode = errCode\n    this.errMsg = ReportUniErrors.get(errCode) ?? ''\n  }\n}\n"],"names":[],"mappings":";;AAKO,MAAM,wBAAwB;AAO9B,MAAM,kBAAsC,oBAAI,IAAI;AAAA;AAAA;AAAA;AAAA,EAIzD,CAAC,MAAO,2CAA2C;AAAA;AAAA;AAAA;AAAA,EAInD,CAAC,OAAO,8BAA8B;AAAA;AAAA;AAAA;AAAA,EAItC,CAAC,OAAO,oCAAoC;AAAA,EAC5C,CAAC,OAAO,kBAAkB;AAAA,EAC1B,CAAC,OAAO,uBAAuB;AAAA,EAC/B,CAAC,OAAO,uBAAuB;AAAA,EAC/B,CAAC,OAAO,qCAAqC;AAAA,EAC7C,CAAC,OAAO,sCAAsC;AAAA,EAC9C,CAAC,OAAO,2CAA2C;AACpD,CAAA;AAKK,MAAO,uBAAuB,SAAQ;AAAA,EAE1C,YACE,SAAwB;;AAExB;AACA,SAAK,aAAa;AAClB,SAAK,UAAU;AACf,SAAK,UAAS,KAAA,IAAA,OAAA,iBAAoB,OAAO,OAAK,QAAA,OAAA,SAAA,KAAA;AAAA,EAC/C;AACF;;"}