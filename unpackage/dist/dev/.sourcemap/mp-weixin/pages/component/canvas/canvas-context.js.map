{"version":3,"file":"canvas-context.js","sources":["pages/component/canvas/canvas-context.uvue","../../../Program Files/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvY29tcG9uZW50L2NhbnZhcy9jYW52YXMtY29udGV4dC51dnVl"],"sourcesContent":["<template>\r\n  <view class=\"page\" id=\"page-canvas\">\r\n    <canvas id=\"canvas\" class=\"canvas-element\"></canvas>\r\n    <scroll-view class=\"scroll-view\" scroll-y=\"true\">\r\n      <view class=\"grid-view\">\r\n        <view class=\"grid-item\" v-for=\"(name, index) in names\" :key=\"index\">\r\n          <button class=\"canvas-drawing-button\" @click=\"handleCanvasButton(name)\">{{name}}</button>\r\n        </view>\r\n      </view>\r\n    </scroll-view>\r\n  </view>\r\n</template>\r\n\r\n<script lang=\"uts\">\r\n  function hidpi(canvas : UniCanvasElement) {\r\n    const context = canvas.getContext(\"2d\")!;\r\n    const dpr = uni.getWindowInfo().pixelRatio;\r\n    canvas.width = canvas.offsetWidth * dpr;\r\n    canvas.height = canvas.offsetHeight * dpr;\r\n    context.scale(dpr, dpr);\r\n  }\r\n\r\n  export default {\r\n    data() {\r\n      const API_PATH = [\"arc\", \"arcTo\", \"bezierCurveTo\", \"quadraticCurve\", \"moveTo\", \"lineTo\", \"rect\", \"clip\", \"createPattern\", \"getSetImageData\"]\r\n      const API_DRAW = [\"stroke\", \"strokeRect\", \"strokeText\", \"fill\", \"fillRect\", \"fillText\", \"drawImage\", \"drawImageLocal\", \"clearRect\"]\r\n      const API_STATE = [\"beginPath\", \"closePath\", \"reset\", \"transform\", \"rotate\", \"resetTransform\", \"save\", \"restore\", \"scale\", \"translate\", \"fontTTF\"]\r\n      const API_PROPERTIES = [\"lineCap\", \"lineJoin\", \"lineWidth\", \"miterLimit\", \"fillStyle\", \"strokeStyle\", \"globalAlpha\", \"font\", \"setLineDash\", \"createLinearGradient\", \"createRadialGradient\", \"textAlign\"]\r\n\r\n      return {\r\n        title: 'createCanvasContextAsync',\r\n        canvas: null as UniCanvasElement | null,\r\n        canvasContext: null as CanvasContext | null,\r\n        renderingContext: null as CanvasRenderingContext2D | null,\r\n        canvasWidth: 0,\r\n        canvasHeight: 0,\r\n        fontLoaded: false,\r\n        names: [...API_PATH, ...API_DRAW, ...API_STATE, ...API_PROPERTIES, \"measureText\", \"path2D\"].sort() as string[]\r\n      }\r\n    },\r\n    onReady() {\r\n      // HBuilderX 4.25+\r\n      // 异步调用方式, 跨平台写法\r\n      uni.createCanvasContextAsync({\r\n        id: 'canvas',\r\n        component: this,\r\n        success: (context : CanvasContext) => {\r\n          this.canvasContext = context;\r\n          this.renderingContext = context.getContext('2d')!;\r\n          this.canvas = this.renderingContext!.canvas;\r\n\r\n          hidpi(this.canvas!);\r\n          this.canvasWidth = this.canvas!.width;\r\n          this.canvasHeight = this.canvas!.height;\r\n        }\r\n      })\r\n\r\n      // 同步调用方式，仅支持 app/web\r\n      // let canvas = uni.getElementById(\"canvas\") as UniCanvasElement\r\n      // this.renderingContext = canvas.getContext(\"2d\")\r\n      // hidpi(canvas);\r\n      // this.canvas = canvas;\r\n      // this.canvasWidth = canvas.width;\r\n      // this.canvasHeight = canvas.height;\r\n    },\r\n    methods: {\r\n      handleCanvasButton(name : string) {\r\n        this.renderingContext!.clearRect(0, 0, this.canvasWidth, this.canvasHeight)\r\n        this.renderingContext!.save()\r\n        switch (name) {\r\n          case \"arc\":\r\n            this.arc();\r\n            break;\r\n          case \"arcTo\":\r\n            this.arcTo();\r\n            break;\r\n          case \"beginPath\":\r\n            this.beginPath();\r\n            break;\r\n          case \"bezierCurveTo\":\r\n            this.bezierCurveTo();\r\n            break;\r\n          case \"clearRect\":\r\n            this.clearRect();\r\n            break;\r\n          case \"clip\":\r\n            this.clip();\r\n            break;\r\n          case \"closePath\":\r\n            this.closePath();\r\n            break;\r\n          case \"getSetImageData\":\r\n            this.getSetImageData();\r\n            break;\r\n          case \"createPattern\":\r\n            this.pattern()\r\n            break;\r\n          case \"createLinearGradient\":\r\n            this.createLinearGradient();\r\n            break;\r\n          case \"createRadialGradient\":\r\n            this.createRadialGradient();\r\n            break;\r\n          case \"fill\":\r\n            this.fill();\r\n            break;\r\n          case \"fillRect\":\r\n            this.fillRect();\r\n            break;\r\n          case \"fillText\":\r\n            this.fillText();\r\n            break;\r\n          case \"lineTo\":\r\n            this.lineTo();\r\n            break;\r\n          case \"moveTo\":\r\n            this.moveTo();\r\n            break;\r\n          case \"quadraticCurve\":\r\n            this.quadraticCurveTo();\r\n            break;\r\n          case \"rect\":\r\n            this.rect();\r\n            break;\r\n          case \"reset\":\r\n            this.reset();\r\n            break;\r\n          case \"resetTransform\":\r\n            this.resetTransform();\r\n            break;\r\n          case \"restore\":\r\n            this.restore();\r\n            break;\r\n          case \"rotate\":\r\n            this.rotate();\r\n            break;\r\n          case \"save\":\r\n            this.save();\r\n            break;\r\n          case \"scale\":\r\n            this.scale();\r\n            break;\r\n          case \"stroke\":\r\n            this.stroke();\r\n            break;\r\n          case \"strokeRect\":\r\n            this.strokeRect();\r\n            break;\r\n          case \"strokeText\":\r\n            this.strokeText();\r\n            break;\r\n          case \"transform\":\r\n            this.transform();\r\n            break;\r\n          case \"translate\":\r\n            this.translate();\r\n            break;\r\n          case \"drawImageLocal\":\r\n            this.drawImageLocal()\r\n            break;\r\n          case \"drawImage\":\r\n            this.drawImage();\r\n            break;\r\n          case \"measureText\":\r\n            this.measureText();\r\n            break;\r\n          case \"fillStyle\":\r\n            this.setFillStyle();\r\n            break;\r\n          case \"strokeStyle\":\r\n            this.setStrokeStyle();\r\n            break;\r\n          case \"globalAlpha\":\r\n            this.setGlobalAlpha();\r\n            break;\r\n          case \"font\":\r\n            this.setFontSize();\r\n            break;\r\n          case \"lineCap\":\r\n            this.setLineCap();\r\n            break;\r\n          case \"lineJoin\":\r\n            this.setLineJoin();\r\n            break;\r\n          case \"setLineDash\":\r\n            this.lineDash();\r\n            break;\r\n          case \"lineWidth\":\r\n            this.setLineWidth();\r\n            break;\r\n          case \"miterLimit\":\r\n            this.setMiterLimit();\r\n            break;\r\n          case \"textAlign\":\r\n            this.textAlign();\r\n            break;\r\n          case \"path2D\":\r\n            this.path2DMethods();\r\n            break;\r\n          case \"fontTTF\":\r\n            this.fontTTF();\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        this.renderingContext!.restore()\r\n      },\r\n      clearCanvasRect() {\r\n        this.renderingContext!.clearRect(0, 0, this.canvasWidth, this.canvasHeight)\r\n      },\r\n      arc() {\r\n        const context = this.renderingContext!\r\n\r\n        context.beginPath()\r\n        context.lineWidth = 2\r\n        context.arc(75, 75, 50, 0, Math.PI * 2, true)\r\n        context.moveTo(110, 75)\r\n        context.arc(75, 75, 35, 0, Math.PI, false)\r\n        context.moveTo(65, 65)\r\n        context.arc(60, 65, 5, 0, Math.PI * 2, true)\r\n        context.moveTo(95, 65)\r\n        context.arc(90, 65, 5, 0, Math.PI * 2, true)\r\n        context.stroke()\r\n      },\r\n      arcTo() {\r\n        const context = this.renderingContext!\r\n\r\n        context.beginPath()\r\n        context.moveTo(150, 20)\r\n        context.arcTo(150, 100, 50, 20, 30)\r\n        context.stroke()\r\n\r\n        context.fillStyle = \"blue\"\r\n        // base point\r\n        context.fillRect(150, 20, 10, 10)\r\n\r\n        context.fillStyle = \"red\"\r\n        // control point one\r\n        context.fillRect(150, 100, 10, 10)\r\n        // control point two\r\n        context.fillRect(50, 20, 10, 10)\r\n        //\r\n        context.setLineDash([5, 5])\r\n        context.moveTo(150, 20)\r\n        context.lineTo(150, 100)\r\n        context.lineTo(50, 20)\r\n        context.stroke()\r\n        context.beginPath()\r\n        context.arc(120, 38, 30, 0, 2 * Math.PI, true)\r\n        context.stroke()\r\n      },\r\n      beginPath() {\r\n        const context = this.renderingContext!\r\n\r\n        // First path\r\n        context.beginPath()\r\n        context.strokeStyle = \"blue\"\r\n        context.moveTo(20, 20)\r\n        context.lineTo(200, 20)\r\n        context.stroke()\r\n\r\n        // Second path\r\n        context.beginPath()\r\n        context.strokeStyle = \"green\"\r\n        context.moveTo(20, 20)\r\n        context.lineTo(120, 120)\r\n        context.stroke()\r\n      },\r\n      textAlign() {\r\n        const context = this.renderingContext!\r\n\r\n        context.beginPath()\r\n        context.moveTo(150, 0)\r\n        context.lineTo(150, 150)\r\n        context.stroke()\r\n\r\n        context.font = \"30px serif\"\r\n\r\n        context.textAlign = \"left\"\r\n        context.fillText(\"left-aligned\", 150, 40)\r\n\r\n        context.textAlign = \"center\"\r\n        context.fillText(\"center-aligned\", 150, 85)\r\n\r\n        context.textAlign = \"right\"\r\n        context.fillText(\"right-aligned\", 150, 130)\r\n      },\r\n      getSetImageData() {\r\n        const context = this.renderingContext!\r\n        // Create path\r\n        context.moveTo(0, 70);\r\n        context.lineTo(80, 0);\r\n        context.lineTo(210, 110);\r\n        context.lineTo(30, 110);\r\n        context.lineTo(160, 0);\r\n        context.lineTo(240, 70);\r\n        context.closePath();\r\n\r\n        // Fill path\r\n        context.fillStyle = \"green\";\r\n        context.fill();\r\n\r\n        let imageData = context.getImageData(0, 0, context.canvas.width / 2, context.canvas.height / 2)\r\n        context.putImageData(imageData, context.canvas.width / 2, context.canvas.height / 2)\r\n      },\r\n      bezierCurveTo() {\r\n        const context = this.renderingContext!\r\n\r\n        context.beginPath()\r\n        context.moveTo(50, 20)\r\n        context.bezierCurveTo(230, 30, 150, 60, 50, 100)\r\n        context.stroke()\r\n\r\n        context.fillStyle = \"blue\"\r\n        // start point\r\n        context.fillRect(50, 20, 10, 10)\r\n        // end point\r\n        context.fillRect(50, 100, 10, 10)\r\n\r\n        context.fillStyle = \"red\"\r\n        // control point one\r\n        context.fillRect(230, 30, 10, 10)\r\n        // control point two\r\n        context.fillRect(150, 70, 10, 10)\r\n      },\r\n      clearRect() {\r\n        const context = this.renderingContext!\r\n\r\n        // 绘制黄色背景\r\n        context.beginPath()\r\n        context.fillStyle = \"#ff6\"\r\n        context.fillRect(0, 0, 300, 150)\r\n\r\n        // 绘制蓝色三角形\r\n        context.beginPath()\r\n        context.fillStyle = \"blue\"\r\n        context.moveTo(20, 20)\r\n        context.lineTo(180, 20)\r\n        context.lineTo(130, 130)\r\n        context.closePath()\r\n        context.fill()\r\n\r\n        // 清除一部分画布\r\n        context.clearRect(10, 10, 120, 100)\r\n      },\r\n      clip() {\r\n        const context = this.renderingContext!\r\n\r\n        // Create circular clipping region\r\n        context.beginPath();\r\n        context.arc(100, 75, 50, 0, Math.PI * 2, true)\r\n        context.clip()\r\n\r\n        // Draw stuff that gets clipped\r\n        context.fillStyle = \"blue\"\r\n        context.fillRect(0, 0, 300, 150)\r\n        context.fillStyle = \"orange\"\r\n        context.fillRect(0, 0, 100, 100)\r\n      },\r\n      closePath() {\r\n        const context = this.renderingContext!\r\n\r\n        context.beginPath()\r\n        context.lineWidth = 10\r\n        context.moveTo(20, 20)\r\n        context.lineTo(20, 100)\r\n        context.lineTo(70, 100)\r\n        context.closePath()\r\n        context.stroke()\r\n      },\r\n      pattern() {\r\n        const context = this.renderingContext!\r\n\r\n        const image = this.canvasContext!.createImage()\r\n        image.src = '/static/api.png';\r\n        image.onload = () => {\r\n          context.save()\r\n          this.clearCanvasRect()\r\n          const pattern = context.createPattern(image, \"repeat\")\r\n          context.fillStyle = pattern\r\n          context.fillRect(0, 0, 400, 400)\r\n          context.restore()\r\n        };\r\n      },\r\n      createLinearGradient() {\r\n        const context = this.renderingContext!\r\n\r\n        // Create a linear gradient\r\n        // The start gradient point is at x=20, y=0\r\n        // The end gradient point is at x=220, y=0\r\n        const gradient = context.createLinearGradient(20, 0, 220, 0)\r\n\r\n        // Add three color stops\r\n        gradient.addColorStop(0, \"green\")\r\n        gradient.addColorStop(0.5, \"cyan\")\r\n        gradient.addColorStop(1, \"green\")\r\n\r\n        // Set the fill style and draw a rectangle\r\n        context.fillStyle = gradient\r\n        context.fillRect(20, 20, 200, 100)\r\n      },\r\n      createRadialGradient() {\r\n        const context = this.renderingContext!\r\n\r\n        // Create a radial gradient\r\n        // The inner circle is at x=110, y=90, with radius=30\r\n        // The outer circle is at x=100, y=100, with radius=70\r\n        const gradient = context.createRadialGradient(110, 90, 30, 100, 100, 70)\r\n\r\n        // Add three color stops\r\n        gradient.addColorStop(0, \"pink\")\r\n        gradient.addColorStop(0.9, \"white\")\r\n        gradient.addColorStop(1, \"green\")\r\n\r\n        // Set the fill style and draw a rectangle\r\n        context.fillStyle = gradient\r\n        context.fillRect(20, 20, 160, 160)\r\n      },\r\n      fill() {\r\n        const context = this.renderingContext!\r\n\r\n        context.beginPath()\r\n        context.rect(20, 20, 150, 100)\r\n        context.strokeStyle = '#00ff00'\r\n        context.fill()\r\n      },\r\n      fillRect() {\r\n        const context = this.renderingContext!\r\n\r\n        context.fillStyle = \"green\"\r\n        context.fillRect(20, 10, 150, 100)\r\n      },\r\n      fillText() {\r\n        const context = this.renderingContext!\r\n\r\n        context.strokeStyle = '#ff0000'\r\n\r\n        context.beginPath()\r\n        context.moveTo(0, 10)\r\n        context.lineTo(300, 10)\r\n        context.stroke()\r\n        // context.save()\r\n        // context.scale(1.5, 1.5)\r\n        // context.translate(20, 20)\r\n        // context.setFontSize(10)\r\n        context.fillText('Hello World', 0, 30, 300)\r\n        // context.setFontSize(20)\r\n        context.fillText('Hello World', 100, 30, 300)\r\n\r\n        // context.restore()\r\n\r\n        context.beginPath()\r\n        context.moveTo(0, 30)\r\n        context.lineTo(300, 30)\r\n        context.stroke()\r\n      },\r\n      moveTo() {\r\n        const context = this.renderingContext!\r\n\r\n        context.beginPath()\r\n        context.moveTo(0, 0)\r\n        context.lineTo(300, 150)\r\n        context.stroke()\r\n      },\r\n      lineTo() {\r\n        const context = this.renderingContext!\r\n\r\n        context.beginPath()\r\n        context.moveTo(20, 20)\r\n        context.lineTo(20, 100)\r\n        context.lineTo(70, 100)\r\n        context.stroke()\r\n      },\r\n      stroke() {\r\n        const context = this.renderingContext!\r\n\r\n        context.beginPath()\r\n        context.moveTo(20, 20)\r\n        context.lineTo(20, 100)\r\n        context.lineTo(70, 100)\r\n        context.strokeStyle = '#00ff00'\r\n        context.stroke()\r\n      },\r\n      strokeRect() {\r\n        const context = this.renderingContext!\r\n\r\n        context.strokeStyle = \"green\"\r\n        context.strokeRect(20, 10, 160, 100)\r\n      },\r\n      strokeText() {\r\n        const context = this.renderingContext!\r\n\r\n        context.font = \"10px serif\"\r\n        context.strokeText(\"Hello world\", 50, 90)\r\n\r\n        context.font = \"30px serif\"\r\n        context.strokeStyle = \"blue\"\r\n        context.strokeText(\"Hello world\", 50, 100)\r\n      },\r\n      rotate() {\r\n        const context = this.renderingContext!\r\n\r\n        // Point of transform origin\r\n        context.arc(0, 0, 5, 0, 2 * Math.PI, true)\r\n        context.fillStyle = \"blue\"\r\n        context.fill()\r\n\r\n        // Non-rotated rectangle\r\n        context.fillStyle = \"gray\"\r\n        context.fillRect(100, 0, 80, 20)\r\n        // Rotated rectangle\r\n        context.rotate((45 * Math.PI) / 180)\r\n        context.fillStyle = \"red\"\r\n        context.fillRect(100, 0, 80, 20)\r\n\r\n        // Reset transformation matrix to the identity matrix\r\n        context.setTransform(1, 0, 0, 1, 0, 0)\r\n      },\r\n      scale() {\r\n        const context = this.renderingContext!\r\n\r\n        // Scaled rectangle\r\n        context.scale(9, 3)\r\n        context.fillStyle = \"red\"\r\n        context.fillRect(10, 10, 8, 20)\r\n\r\n        // Reset current transformation matrix to the identity matrix\r\n        context.setTransform(1, 0, 0, 1, 0, 0)\r\n\r\n        // Non-scaled rectangle\r\n        context.fillStyle = \"gray\"\r\n        context.fillRect(10, 10, 8, 20)\r\n      },\r\n      reset() {\r\n        const context = this.renderingContext!\r\n\r\n        // Set line width\r\n        context.lineWidth = 10\r\n        context.strokeStyle = '#00ff00'\r\n        // Stroke rect outline\r\n        context.strokeRect(50, 50, 150, 100)\r\n\r\n        // Create filled text\r\n        context.font = \"50px serif\";\r\n        context.fillText(\"Rect!\", 70, 110)\r\n\r\n        context.lineWidth = 5\r\n\r\n        // Stroke out circle\r\n        context.beginPath();\r\n        context.arc(300, 100, 50, 0, 2 * Math.PI)\r\n        context.stroke();\r\n\r\n        // Create filled text\r\n        context.font = \"25px sans-serif\"\r\n        context.fillText(\"Circle!\", 265, 100)\r\n        // context.reset()\r\n\r\n        hidpi(this.canvas!)\r\n      },\r\n      translate() {\r\n        const context = this.renderingContext!\r\n\r\n        // Moved square\r\n        context.translate(110, 30)\r\n        context.fillStyle = \"red\"\r\n        context.fillRect(0, 0, 80, 80)\r\n\r\n        // Reset current transformation matrix to the identity matrix\r\n        context.setTransform(1, 0, 0, 1, 0, 0)\r\n\r\n        // Unmoved square\r\n        context.fillStyle = \"gray\"\r\n        context.fillRect(0, 0, 80, 80)\r\n      },\r\n      save() {\r\n        const context = this.renderingContext!\r\n\r\n        context.beginPath()\r\n        context.strokeStyle = '#00ff00'\r\n        context.scale(2, 2)\r\n        context.strokeStyle = '#ff0000'\r\n        context.rect(0, 0, 100, 100)\r\n        context.stroke()\r\n        context.restore()\r\n\r\n        context.save()\r\n        context.rect(0, 0, 50, 50)\r\n        context.stroke()\r\n      },\r\n      restore() {\r\n        const context = this.renderingContext!;\r\n\r\n        [3, 2, 1].forEach((item) => {\r\n          context.save()\r\n          context.beginPath()\r\n          context.scale(item, item)\r\n          context.rect(10, 10, 100, 100)\r\n          context.stroke()\r\n          context.restore()\r\n        })\r\n      },\r\n      drawImageLocal() {\r\n        const context = this.renderingContext!\r\n        const image = this.canvasContext!.createImage();\r\n        image.src = '/static/uni.png'\r\n        image.onload = () => {\r\n          context.drawImage(image, 0, 0, 100, 100)\r\n        }\r\n      },\r\n      drawImage() {\r\n        const context = this.renderingContext!\r\n        const image = this.canvasContext!.createImage();\r\n        image.src = 'https://web-ext-storage.dcloud.net.cn/uni-app-x/hello-uniappx-qrcode.png'\r\n        image.onload = () => {\r\n          context.drawImage(image, 0, 0, 100, 100)\r\n        }\r\n      },\r\n      rect() {\r\n        const context = this.renderingContext!\r\n\r\n        context.beginPath()\r\n        context.rect(20, 20, 150, 100)\r\n        context.stroke()\r\n      },\r\n      quadraticCurveTo() {\r\n        const context = this.renderingContext!\r\n\r\n        // Quadratic Bézier curve\r\n        context.beginPath()\r\n        context.moveTo(50, 20)\r\n        context.quadraticCurveTo(230, 30, 50, 100)\r\n        context.stroke()\r\n\r\n        // Start and end points\r\n        context.fillStyle = \"blue\"\r\n        context.beginPath()\r\n        context.arc(50, 20, 5, 0, 2 * Math.PI, true) // Start point\r\n        context.arc(50, 100, 5, 0, 2 * Math.PI, true) // End point\r\n        context.fill();\r\n\r\n        // Control point\r\n        context.fillStyle = \"red\"\r\n        context.beginPath()\r\n        context.arc(230, 30, 5, 0, 2 * Math.PI, true)\r\n        context.fill()\r\n      },\r\n      resetTransform() {\r\n        const context = this.renderingContext!\r\n\r\n        // Draw a rotated rectangle\r\n        context.rotate((45 * Math.PI) / 180)\r\n        context.fillRect(60, 0, 100, 30)\r\n\r\n        // Reset transformation matrix to the identity matrix\r\n        context.resetTransform()\r\n        context.fillStyle = \"red\"\r\n        context.fillRect(60, 0, 100, 30)\r\n      },\r\n      transform() {\r\n        const context = this.renderingContext!\r\n\r\n        context.transform(1, 0.2, 0.8, 1, 0, 0)\r\n        context.fillRect(0, 0, 100, 100)\r\n      },\r\n      setFillStyle() {\r\n        const context = this.renderingContext!;\r\n        ['#fef957', 'rgb(242,159,63)', 'rgb(242,117,63)', '#e87e51'].forEach((item : string, index : number) => {\r\n          context.fillStyle = item\r\n          context.beginPath()\r\n          context.rect(0 + 75 * index, 0, 50, 50)\r\n          context.fill()\r\n        })\r\n      },\r\n      setStrokeStyle() {\r\n        const context = this.renderingContext!;\r\n\r\n        ['#fef957', 'rgb(242,159,63)', 'rgb(242,117,63)', '#e87e51'].forEach((item : string, index : number) => {\r\n          context.strokeStyle = item\r\n          context.beginPath()\r\n          context.rect(0 + 75 * index, 0, 50, 50)\r\n          context.stroke()\r\n        })\r\n      },\r\n      setGlobalAlpha() {\r\n        const context = this.renderingContext!\r\n\r\n        context.fillStyle = '#000000';\r\n        [1, 0.5, 0.1].forEach((item : number, index : number) => {\r\n          context.globalAlpha = item\r\n          context.beginPath()\r\n          context.rect(0 + 75 * index, 0, 50, 50)\r\n          context.fill()\r\n        })\r\n        context.globalAlpha = 1\r\n      },\r\n      setFontSize() {\r\n        const context = this.renderingContext!;\r\n\r\n        [10, 20, 30, 40].forEach((item : number, index : number) => {\r\n          context.font = item + 'px serif'\r\n          context.fillText('Hello, world', 20, 20 + 40 * index)\r\n        })\r\n      },\r\n      setLineCap() {\r\n        const context = this.renderingContext!\r\n\r\n        context.lineWidth = 10;\r\n        ['butt', 'round', 'square'].forEach((item : string, index : number) => {\r\n          context.beginPath()\r\n          context.lineCap = item as 'butt' | 'round' | 'square'\r\n          context.moveTo(20, 20 + 20 * index)\r\n          context.lineTo(100, 20 + 20 * index)\r\n          context.stroke()\r\n        })\r\n      },\r\n      setLineJoin() {\r\n        const context = this.renderingContext!\r\n\r\n        context.lineWidth = 10;\r\n        ['bevel', 'round', 'miter'].forEach((item : string, index : number) => {\r\n          context.beginPath()\r\n          context.lineJoin = item as 'bevel' | 'round' | 'miter'\r\n          context.moveTo(20 + 80 * index, 20)\r\n          context.lineTo(100 + 80 * index, 50)\r\n          context.lineTo(20 + 80 * index, 100)\r\n          context.stroke()\r\n        })\r\n      },\r\n      setLineWidth() {\r\n        const context = this.renderingContext!;\r\n\r\n        [2, 4, 6, 8, 10].forEach((item : number, index : number) => {\r\n          context.beginPath()\r\n          context.lineWidth = item\r\n          context.moveTo(20, 20 + 20 * index)\r\n          context.lineTo(100, 20 + 20 * index)\r\n          context.stroke()\r\n        })\r\n      },\r\n      lineDash() {\r\n        const context = this.renderingContext!\r\n\r\n        context.setLineDash([4, 16])\r\n\r\n        // Dashed line with no offset\r\n        context.beginPath()\r\n        context.moveTo(0, 50)\r\n        context.lineTo(300, 50)\r\n        context.stroke()\r\n\r\n        // Dashed line with offset of 4\r\n        context.beginPath()\r\n        context.strokeStyle = \"red\"\r\n        context.lineDashOffset = 4\r\n        context.moveTo(0, 100)\r\n        context.lineTo(300, 100)\r\n        context.stroke()\r\n      },\r\n      setMiterLimit() {\r\n        const context = this.renderingContext!\r\n\r\n        context.lineWidth = 4;\r\n        [2, 4, 6, 8, 10].forEach((item : number, index : number) => {\r\n          context.beginPath()\r\n          context.miterLimit = item\r\n          context.moveTo(20 + 80 * index, 20)\r\n          context.lineTo(100 + 80 * index, 50)\r\n          context.lineTo(20 + 80 * index, 100)\r\n          context.stroke()\r\n        })\r\n      },\r\n      measureText() {\r\n        const context = this.renderingContext!\r\n\r\n        const text = \"uni-app x，是下一代 uni-app，是一个跨平台应用开发引擎\"\r\n\r\n        context.font = \"20px 宋体\"\r\n\r\n        context.fillStyle = \"red\"\r\n        context.fillText(text, 0, 60)\r\n        const textMetrics = context.measureText(text)\r\n        context.strokeText(text, 40, 100)\r\n        context.fillText(\"measure text width:\" + textMetrics.width, 40, 80)\r\n      },\r\n      path2DMethods() {\r\n        const context = this.renderingContext!\r\n        context.beginPath()\r\n        const path2D = this.canvasContext!.createPath2D();\r\n        const amplitude = 64;\r\n        const wavelength = 64;\r\n        for (let i = 0; i < 5; i++) {\r\n          const x1 = 0 + (i * wavelength);\r\n          const y1 = 128;\r\n          const x2 = x1 + wavelength / 4;\r\n          const y2 = y1 - amplitude;\r\n          const x3 = x1 + 3 * wavelength / 4;\r\n          const y3 = y1 + amplitude;\r\n          const x4 = x1 + wavelength;\r\n          const y4 = y1;\r\n          context.moveTo(x1, y1);\r\n          path2D.bezierCurveTo(x2, y2, x3, y3, x4, y4);\r\n        }\r\n        context.stroke(path2D);\r\n\r\n        const path2DRect = this.canvasContext!.createPath2D();\r\n        path2DRect.rect(10, 10, 100, 20);\r\n        context.fill(path2DRect);\r\n      },\r\n      fontTTF() {\r\n        const context = this.renderingContext!\r\n        const fontMap = new Map<string, UTSJSONObject>([\r\n          [\"AlimamaDaoLiTiOTF\", { path: \"/static/font/AlimamaDaoLiTi.otf\", text: \"阿里妈妈刀隶体字体otf加载成功\" } as UTSJSONObject],\r\n          [\"AlimamaDaoLiTiWOFF\", { path: \"/static/font/AlimamaDaoLiTi.woff\", text: \"阿里妈妈刀隶体字体Woff加载成功\" } as UTSJSONObject],\r\n          [\"iconfont-star\", { path: \"/static/fonts/icon-star.ttf\", text: \"\\ue879\" } as UTSJSONObject],\r\n        ]);\r\n        var yOffset = 0\r\n\r\n        var drawFont = (key : string, value : UTSJSONObject) => {\r\n          uni.__f__('log','at pages/component/canvas/canvas-context.uvue:820',`${key}字体加载成功`)\r\n          context.save()\r\n          const text = value[\"text\"] as string\r\n          context.font = `20px ${key}`\r\n          context.fillStyle = \"red\"\r\n          yOffset += 25\r\n          context.fillText(text, 0, yOffset)\r\n          yOffset += 25\r\n          context.strokeText(text, 0, yOffset)\r\n          context.restore()\r\n        }\r\n        fontMap.forEach((value : UTSJSONObject, key : string) => {\r\n          uni.__f__('log','at pages/component/canvas/canvas-context.uvue:832',`key:${key} value:${value[\"path\"]}`)\r\n          if (this.fontLoaded) {\r\n            drawFont(key, value)\r\n          } else {\r\n            uni.loadFontFace({\r\n              family: key,\r\n              source: `url('${value[\"path\"]}')`,\r\n              success: () => {\r\n                drawFont(key, value)\r\n              }\r\n            })\r\n          }\r\n        })\r\n        this.fontLoaded = true\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .page {\r\n    flex: 1;\r\n  }\r\n\r\n  .scroll-view {\r\n    flex: 1;\r\n  }\r\n\r\n  .canvas-element {\r\n    width: 100%;\r\n    height: 250px;\r\n    background-color: #ffffff;\r\n  }\r\n\r\n  .grid-view {\r\n    padding: 10px;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n  }\r\n\r\n  .grid-item {\r\n    width: 50%;\r\n    padding: 5px;\r\n  }\r\n</style>\r\n","import MiniProgramPage from 'W:/Workplace/2.小程序/lihai-app/pages/component/canvas/canvas-context.uvue'\nwx.createPage(MiniProgramPage)"],"names":["uni","defineComponent"],"mappings":"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"}