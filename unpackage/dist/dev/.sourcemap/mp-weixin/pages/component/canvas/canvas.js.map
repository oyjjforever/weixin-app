{"version":3,"file":"canvas.js","sources":["pages/component/canvas/canvas.uvue","../../../Program Files/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvY29tcG9uZW50L2NhbnZhcy9jYW52YXMudXZ1ZQ"],"sourcesContent":["<template>\r\n  <view class=\"page\" id=\"page-canvas\">\r\n    <canvas id=\"canvas\" class=\"canvas-element\"></canvas>\r\n    <scroll-view class=\"scroll-view\">\r\n\r\n\r\n\r\n\r\n\r\n\r\n      <button class=\"canvas-drawing-button\" id=\"toDataURL\" @click=\"canvasToDataURL\">canvasToDataURL</button>\r\n      <view class=\"text-group\" v-if=\"dataBase64.length>0\">\r\n        <text>canvasToDataURL:</text>\r\n        <text>{{dataBase64.slice(0,22)}}...</text>\r\n      </view>\r\n      <button @click=\"onCreateImage\">createImage</button>\r\n      <button @click=\"onCreatePath2D\">createPath2D</button>\r\n      <button @click=\"startAnimationFrame\">requestAnimationFrame</button>\r\n      <button @click=\"stopAnimationFrame\">cancelAnimationFrame</button>\r\n      <view style=\"padding: 8px 10px;\">CanvasContext API 演示</view>\r\n      <navigator url=\"./canvas-context\">\r\n        <button>CanvasContext API</button>\r\n      </navigator>\r\n\r\n      <view class=\"text-group\">\r\n        <text>获取 CanvasContext 结果：</text>\r\n        <text id=\"testCanvasContext\">{{testCanvasContext}}</text>\r\n      </view>\r\n      <view class=\"text-group\">\r\n        <text>测试 ToDataURL 结果：</text>\r\n        <text id=\"testToDataURLResult\">{{testToDataURLResult}}</text>\r\n      </view>\r\n\r\n      <view class=\"text-group\">\r\n        <text>测试 createImage 结果：</text>\r\n        <text id=\"testCreateImage\">{{testCreateImage}}</text>\r\n      </view>\r\n\r\n      <view class=\"text-group\">\r\n        <text>测试 createPath2D 结果：</text>\r\n        <text id=\"testCreatePath2D\">{{testCreatePath2D}}</text>\r\n      </view>\r\n\r\n      <view class=\"text-group\">\r\n        <text>测试 createCanvasContextAsync 结果：</text>\r\n        <view @click=\"testCreateContextAsync\" id=\"createCanvasContextAsync\">{{testCanvasCtx}}</view>\r\n      </view>\r\n      <canvas-child ref=\"canvas-child\"></canvas-child>\r\n    </scroll-view>\r\n  </view>\r\n</template>\r\n\r\n<script lang=\"uts\">\r\n  import CanvasChild from './canvas-child.uvue'\r\n\r\n  function hidpi(canvas : UniCanvasElement) {\r\n    const context = canvas.getContext(\"2d\")!;\r\n    const dpr = uni.getWindowInfo().pixelRatio;\r\n    canvas.width = canvas.offsetWidth * dpr;\r\n    canvas.height = canvas.offsetHeight * dpr;\r\n    context.scale(dpr, dpr);\r\n  }\r\n\r\n  export default {\r\n    components: {\r\n      CanvasChild\r\n    },\r\n    data() {\r\n      return {\r\n        title: 'Context2D',\r\n        canvas: null as UniCanvasElement | null,\r\n        canvasContext: null as CanvasContext | null,\r\n        renderingContext: null as CanvasRenderingContext2D | null,\r\n        canvasWidth: 0,\r\n        canvasHeight: 0,\r\n        dataBase64: '',\r\n        taskId: 0,\r\n        lastTime: 0,\r\n        frameCount: 0,\r\n        // 仅测试\r\n        testCanvasContext: false,\r\n        testToBlobResult: false,\r\n        testToDataURLResult: false,\r\n        testCreateImage: false,\r\n        testCreatePath2D: false,\r\n        testFrameCount: 0,\r\n        testCanvasCtx1: false,\r\n        testCanvasCtx2: false,\r\n        testCounter: 0\r\n      }\r\n    },\r\n    computed: {\r\n      testCanvasCtx() {\r\n        return this.testCanvasCtx1 && this.testCanvasCtx2\r\n      }\r\n    },\r\n    onLoad() {\r\n      // HBuilderX 4.25+\r\n      // 异步调用方式, 跨平台写法\r\n      uni.createCanvasContextAsync({\r\n        id: 'canvas',\r\n        component: this,\r\n        success: (context : CanvasContext) => {\r\n          this.canvasContext = context;\r\n          this.renderingContext = context.getContext('2d')!;\r\n          this.canvas = this.renderingContext!.canvas;\r\n\r\n          hidpi(this.canvas!);\r\n          this.canvasWidth = this.canvas!.width;\r\n          this.canvasHeight = this.canvas!.height;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          setTimeout(() => {\r\n            this.testToDataURLResult = this.canvasContext!.toDataURL().startsWith('data:image/png;base64')\r\n          }, 50)\r\n\r\n          this.testCanvasContext = true\r\n        }\r\n      })\r\n\r\n      uni.$on('canvasChildReady', this.onChildReady)\r\n    },\r\n    onReady() {\r\n      // 同步调用方式，仅支持 app/web\r\n      // let canvas = uni.getElementById(\"canvas\") as UniCanvasElement\r\n      // this.renderingContext = canvas.getContext(\"2d\")\r\n      // hidpi(canvas);\r\n      // this.canvas = canvas;\r\n      // this.canvasWidth = canvas.width;\r\n      // this.canvasHeight = canvas.height;\r\n    },\r\n    onUnload() {\r\n      uni.$off('canvasChildReady', this.onChildReady)\r\n      if (this.taskId > 0) {\r\n        this.stopAnimationFrame()\r\n      }\r\n    },\r\n    methods: {\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      canvasToDataURL() {\r\n        this.dataBase64 = this.canvasContext!.toDataURL()\r\n      },\r\n      onCreateImage() {\r\n        this.renderingContext!.clearRect(0, 0, this.canvasWidth, this.canvasHeight)\r\n        let image = this.canvasContext!.createImage();\r\n        image.src = \"/static/logo.png\"\r\n        image.onload = () => {\r\n          this.testCreateImage = true\r\n          this.renderingContext?.drawImage(image, 0, 0, 100, 100);\r\n        }\r\n      },\r\n      onCreatePath2D() {\r\n        this.renderingContext!.clearRect(0, 0, this.canvasWidth, this.canvasHeight)\r\n        const context = this.renderingContext!\r\n        let path2D = this.canvasContext!.createPath2D()\r\n        this.testCreatePath2D = true\r\n        const amplitude = 64;\r\n        const wavelength = 64;\r\n        for (let i = 0; i < 5; i++) {\r\n          const x1 = 0 + (i * wavelength);\r\n          const y1 = 128;\r\n          const x2 = x1 + wavelength / 4;\r\n          const y2 = y1 - amplitude;\r\n          const x3 = x1 + 3 * wavelength / 4;\r\n          const y3 = y1 + amplitude;\r\n          const x4 = x1 + wavelength;\r\n          const y4 = y1;\r\n          context.moveTo(x1, y1);\r\n          path2D.bezierCurveTo(x2, y2, x3, y3, x4, y4);\r\n        }\r\n        context.stroke(path2D);\r\n      },\r\n      startAnimationFrame() {\r\n        this.taskId = this.canvasContext!.requestAnimationFrame((timestamp : number) => {\r\n          this.testFrameCount++\r\n          this.updateFPS(timestamp)\r\n          this.startAnimationFrame()\r\n        })\r\n      },\r\n      stopAnimationFrame() {\r\n        this.canvasContext!.cancelAnimationFrame(this.taskId)\r\n        this.taskId = 0\r\n      },\r\n      updateFPS(timestamp : number) {\r\n        this.frameCount++\r\n        if (timestamp - this.lastTime >= 1000) {\r\n          const timeOfFrame = (1000 / this.frameCount)\r\n          this.renderingContext!.clearRect(0, 0, this.canvasWidth, this.canvasHeight)\r\n          this.renderingContext!.fillText(`${this.frameCount} / ${timeOfFrame.toFixed(3)}ms`, 10, 18)\r\n          this.frameCount = 0\r\n          this.lastTime = timestamp\r\n        }\r\n      },\r\n      testCreateContextAsync() {\r\n        uni.createCanvasContextAsync({\r\n          id: 'canvas',\r\n          component: this,\r\n          success: () => {\r\n            this.testCanvasCtx1 = true\r\n          }\r\n        })\r\n\r\n        // no `component` param\r\n        uni.createCanvasContextAsync({\r\n          id: 'canvas',\r\n          success: () => {\r\n            this.testCanvasCtx2 = true\r\n          }\r\n        })\r\n      },\r\n      onChildReady() {\r\n        const childInstance = (this.$refs['canvas-child'] as ComponentPublicInstance);\r\n        this.testCounter = childInstance.$data['testCounter'] as number;\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .page {\r\n    flex: 1;\r\n    height: 100%;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .scroll-view {\r\n    flex: 1;\r\n  }\r\n\r\n  .canvas-element {\r\n    width: 100%;\r\n    height: 250px;\r\n    background-color: #ffffff;\r\n  }\r\n\r\n  .btn-to-image {\r\n    margin: 10px;\r\n  }\r\n\r\n  .text-group {\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 8px 10px;\r\n  }\r\n</style>\r\n","import MiniProgramPage from 'W:/Workplace/2.小程序/lihai-app/pages/component/canvas/canvas.uvue'\nwx.createPage(MiniProgramPage)"],"names":["uni","defineComponent"],"mappings":"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"}