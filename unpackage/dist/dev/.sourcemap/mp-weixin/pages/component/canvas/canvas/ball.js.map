{"version":3,"file":"ball.js","sources":["pages/component/canvas/canvas/ball.uvue","../../../Program Files/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvY29tcG9uZW50L2NhbnZhcy9jYW52YXMvYmFsbC51dnVl"],"sourcesContent":["<template>\r\n  <view class=\"page-body\">\r\n    <canvas id=\"canvas\" class=\"canvas\"></canvas>\r\n    <text class=\"fps\">FPS: {{fpsString}}</text>\r\n    <view class=\"item\">\r\n      <text class=\"item-label\">Speed</text>\r\n      <button size=\"mini\" @click=\"lessClick('speed')\">-</button>\r\n      <text class=\"item-value\">{{ballSpeed}}</text>\r\n      <button size=\"mini\" @click=\"plusClick('speed')\">+</button>\r\n    </view>\r\n    <view class=\"item\">\r\n      <text class=\"item-label\">Layer</text>\r\n      <button size=\"mini\" @click=\"lessClick('layer')\">-</button>\r\n      <text class=\"item-value\">{{ballLayer}}</text>\r\n      <button size=\"mini\" @click=\"plusClick('layer')\">+</button>\r\n    </view>\r\n    <view class=\"item\">\r\n      <text class=\"item-label\">Inlayer</text>\r\n      <button size=\"mini\" @click=\"lessClick('inLayer')\">-</button>\r\n      <text class=\"item-value\">{{ballInlayer}}</text>\r\n      <button size=\"mini\" @click=\"plusClick('inLayer')\">+</button>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<script setup lang=\"uts\">\r\n  let fpsString = ref(\"-/-ms\")\r\n  let ballSpeed = ref(3)\r\n  let ballLayer = ref(3)\r\n  let ballInlayer = ref(20)\r\n\r\n  class Ball {\r\n    private width : number\r\n    private height : number\r\n    public x : number\r\n    public y : number\r\n    public vx : number\r\n    public vy : number\r\n    public radius : number = 5\r\n\r\n    constructor(w : number, h : number, x : number, y : number, vx : number, vy : number) {\r\n      this.width = w\r\n      this.height = h\r\n      this.x = x\r\n      this.y = y\r\n      this.vx = vx\r\n      this.vy = vy\r\n    }\r\n\r\n    move() {\r\n      this.x += this.vx\r\n      this.y += this.vy\r\n\r\n      // 边框反弹\r\n      if (this.x < this.radius) {\r\n        this.vx = Math.abs(this.vx)\r\n        return\r\n      }\r\n      if (this.x > this.width - this.radius) {\r\n        this.vx = -Math.abs(this.vx)\r\n      }\r\n      if (this.y < this.radius) {\r\n        this.vy = Math.abs(this.vy)\r\n        return\r\n      }\r\n      if (this.y > this.height - this.radius) {\r\n        this.vy = -Math.abs(this.vy)\r\n      }\r\n    }\r\n  }\r\n\r\n  class BallAnimation {\r\n    private ctx : CanvasRenderingContext2D\n    private canvasContext : CanvasContext\r\n    private ballList : Array<Ball> = []\r\n    private _speed = 3\r\n    private _layer = 3\r\n    private _ballInlayer = 20\r\n    private runningFlag : boolean = false\r\n\r\n    private _animateTaskId : number = 0\r\n    private frameCount = 0\r\n    private lastTime = 0\r\n\r\n    constructor(canvasContext : CanvasContext) {\n      this.canvasContext = canvasContext\r\n      this.ctx = canvasContext.getContext('2d') as CanvasRenderingContext2D\r\n      this.initBall()\r\n      this.ctx.fillStyle = '#007AFF'\r\n    }\r\n\r\n    private getDistance(x : number, y : number) : number {\r\n      return Math.pow((Math.pow(x, 2) + Math.pow(y, 2)), 0.5)\r\n    }\r\n\r\n    private initBall() {\r\n      const canvasWidth = this.ctx.canvas.offsetWidth;\r\n      const canvasHeight = this.ctx.canvas.offsetHeight;\r\n      for (let i = 0; i < this._layer; i++) {\r\n        let radius = this.getDistance(canvasWidth / 2, canvasHeight / 2) / this._layer * i\r\n        for (let j = 0; j < this._ballInlayer; j++) {\r\n          let deg = j * 2 * Math.PI / this._ballInlayer,\r\n            sin = Math.sin(deg),\r\n            cos = Math.cos(deg),\r\n            x = radius * cos + canvasWidth / 2,\r\n            y = radius * sin + canvasHeight / 2,\r\n            vx = this.speed * cos,\r\n            vy = this.speed * sin\r\n          this.ballList.push(new Ball(canvasWidth, canvasHeight, x, y, vx, vy))\r\n        }\r\n      }\r\n    }\r\n\r\n    private reset() {\r\n      this.ballList.length = 0\r\n      this.initBall()\r\n    }\r\n\r\n    public get speed() : number {\r\n      return this._speed\r\n    }\r\n    public set speed(value : number) {\r\n      this._speed = value\r\n      this.reset()\r\n    }\r\n\r\n    public get layer() : number {\r\n      return this._layer\r\n    }\r\n    public set layer(value : number) {\r\n      this._layer = value\r\n      this.reset()\r\n    }\r\n\r\n    public get inLayer() : number {\r\n      return this._ballInlayer\r\n    }\r\n    public set inLayer(value : number) {\r\n      this._ballInlayer = value\r\n      this.reset()\r\n    }\r\n\r\n    public animate() {\r\n      this.ctx.clearRect(0, 0, this.ctx.canvas.offsetWidth, this.ctx.canvas.offsetHeight)\r\n      this.ballList.forEach((item) => {\r\n        item.move()\r\n        this.ctx.beginPath()\r\n        this.ctx.arc(item.x, item.y, item.radius, 0, 2 * Math.PI)\r\n        // this.ctx.ellipse(item.x, item.y, item.radius, item.radius, 0, 0, Math.PI * 2)\r\n        this.ctx.fill()\r\n      })\r\n\r\n      if (!this.runningFlag) {\r\n        return\r\n      }\r\n      this._animateTaskId = this.canvasContext.requestAnimationFrame((timestamp : number) => {\r\n        this.animate()\r\n        this.updateFPS(timestamp)\r\n      })\r\n    }\r\n\r\n    updateFPS(timestamp : number) {\r\n      this.frameCount++\r\n      if (timestamp - this.lastTime >= 1000) {\r\n        const timeOfFrame = (1000 / this.frameCount)\r\n        fpsString.value = `${this.frameCount} / ${timeOfFrame.toFixed(3)}ms`\r\n        this.frameCount = 0\r\n        this.lastTime = timestamp\r\n      }\r\n    }\r\n\r\n    start() {\r\n      this.canvasContext.cancelAnimationFrame(this._animateTaskId)\r\n      this.runningFlag = true\r\n      this.animate()\r\n    }\r\n\r\n    stop() {\r\n      this.runningFlag = false\r\n      this.canvasContext.cancelAnimationFrame(this._animateTaskId)\r\n    }\r\n  }\r\n\r\n  let animation : BallAnimation | null = null\r\n  onReady(() => {\n    uni.createCanvasContextAsync({\n      id: 'canvas',\n      // component: this,\n      success: (context : CanvasContext) => {\n        const renderingContext = context.getContext('2d')!;\n        const canvas = renderingContext.canvas;\n\n        const dpr = uni.getWindowInfo().pixelRatio;\n        canvas.width = canvas.offsetWidth * dpr\n        canvas.height = canvas.offsetHeight * dpr\n        renderingContext.scale(dpr, dpr)\n\n        animation = new BallAnimation(context)\n        animation?.start()\n      }\n    })\r\n  })\r\n\r\n  let lessClick = (type : string) => {\r\n    if (type == 'speed') {\r\n      animation!.speed--;\r\n      ballSpeed.value = animation!.speed\r\n    } else if (type == 'layer') {\r\n      animation!.layer -= 5;\r\n      ballLayer.value = animation!.layer\r\n    } else if (type == 'inLayer') {\r\n      animation!.inLayer -= 5;\r\n      ballInlayer.value = animation!.inLayer\r\n    }\r\n  }\r\n\r\n  let plusClick = (type : string) => {\r\n    if (type == 'speed') {\r\n      animation!.speed++;\r\n      ballSpeed.value = animation!.speed\r\n    } else if (type == 'layer') {\r\n      animation!.layer += 5;\r\n      ballLayer.value = animation!.layer\r\n    } else if (type == 'inLayer') {\r\n      animation!.inLayer += 5;\r\n      ballInlayer.value = animation!.inLayer\r\n    }\r\n  }\r\n\r\n  onUnload(() => {\r\n    animation?.stop()\r\n    animation = null\r\n  })\r\n\r\n  onPageShow(() => {\r\n    animation?.start()\r\n  })\r\n\r\n  onPageHide(() => {\r\n    animation?.stop()\r\n  })\r\n</script>\r\n\r\n<style>\r\n  .page-body-wrapper {\r\n    text-align: center;\r\n  }\r\n\r\n  .page-body {\r\n    padding: 15px;\r\n  }\r\n\r\n  .canvas {\r\n    width: 300px;\r\n    height: 300px;\r\n    margin: auto;\r\n    background-color: #fff;\r\n  }\r\n\r\n  .fps {\r\n    margin-top: 30px;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .item {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    margin-top: 10px;\r\n  }\r\n\r\n  .item-label {\r\n    margin-right: auto;\r\n  }\r\n\r\n  .item-value {\r\n    color: cornflowerblue;\r\n    width: 50px;\r\n    text-align: center;\r\n  }\r\n</style>\r\n","import MiniProgramPage from 'W:/Workplace/2.小程序/lihai-app/pages/component/canvas/canvas/ball.uvue'\nwx.createPage(MiniProgramPage)"],"names":["ref","onReady","uni","onUnload","onPageShow","onPageHide","MiniProgramPage"],"mappings":"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"}