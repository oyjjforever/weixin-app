{"version":3,"file":"textarea.js","sources":["pages/component/textarea/textarea.uvue","../../../Program Files/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvY29tcG9uZW50L3RleHRhcmVhL3RleHRhcmVhLnV2dWU"],"sourcesContent":["<script lang=\"uts\">\r\n  import { ItemType } from '@/components/enum-data/enum-data-types'\r\n  export default {\r\n    data() {\r\n      return {\r\n        adjust_position_boolean: false,\r\n        show_confirm_bar_boolean: false,\r\n        fixed_boolean: false,\r\n        auto_height_boolean: false,\r\n        confirm_hold_boolean: false,\r\n        focus_boolean: true,\r\n        auto_focus_boolean: false,\r\n        default_value: \"1\\n2\\n3\\n4\\n5\\n6\",\r\n        inputmode_enum: [{ \"value\": 1, \"name\": \"text\" }, { \"value\": 2, \"name\": \"decimal\" }, { \"value\": 3, \"name\": \"numeric\" }, { \"value\": 4, \"name\": \"tel\" }, { \"value\": 5, \"name\": \"search\" }, { \"value\": 6, \"name\": \"email\" }, { \"value\": 7, \"name\": \"url\" }, { \"value\": 0, \"name\": \"none\" }] as ItemType[],\r\n        confirm_type_list: [{ \"value\": 0, \"name\": \"return\" }, { \"value\": 1, \"name\": \"done\" }, { \"value\": 2, \"name\": \"send\" }, { \"value\": 3, \"name\": \"search\" }, { \"value\": 4, \"name\": \"next\" }, { \"value\": 5, \"name\": \"go\" }] as ItemType[],\r\n        cursor_color: \"#3393E2\",\r\n        cursor: 0,\r\n        inputmode_enum_current: 0,\r\n        confirm_type_current: 0,\r\n        placeholder_value: \"请输入\",\r\n        defaultModel: '123',\r\n        textareaMaxLengthValue: \"\",\r\n        isSelectionFocus: false,\r\n        selectionStart: -1,\r\n        selectionEnd: -1,\r\n        hold_keyboard: false,\r\n        adjust_position: false,\r\n        disabled: false,\r\n        jest_result: false,\r\n        isAutoTest: false,\r\n        changeValue: \"\",\r\n        textareaRect: null as DOMRect | null,\r\n      }\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    methods: {\r\n      textarea_click() { uni.__f__('log','at pages/component/textarea/textarea.uvue:44',\"组件被点击时触发\") },\r\n      textarea_touchstart() { uni.__f__('log','at pages/component/textarea/textarea.uvue:45',\"手指触摸动作开始\") },\r\n      textarea_touchmove() { uni.__f__('log','at pages/component/textarea/textarea.uvue:46',\"手指触摸后移动\") },\r\n      textarea_touchcancel() { uni.__f__('log','at pages/component/textarea/textarea.uvue:47',\"手指触摸动作被打断，如来电提醒，弹窗\") },\r\n      textarea_touchend() { uni.__f__('log','at pages/component/textarea/textarea.uvue:48',\"手指触摸动作结束\") },\r\n      textarea_tap() { uni.__f__('log','at pages/component/textarea/textarea.uvue:49',\"手指触摸后马上离开\") },\r\n      textarea_longpress() { uni.__f__('log','at pages/component/textarea/textarea.uvue:50',\"如果一个组件被绑定了 longpress 事件，那么当用户长按这个组件时，该事件将会被触发。\") },\r\n      textarea_confirm() { uni.__f__('log','at pages/component/textarea/textarea.uvue:51',\"点击完成时， 触发 confirm 事件，event.detail = {value: value}\") },\r\n      textarea_input(e: UniInputEvent) {\r\n        uni.__f__('log','at pages/component/textarea/textarea.uvue:53',\"当键盘输入时，触发 input 事件，event.detail = {value, cursor}， @input 处理函数的返回值并不会反映到 textarea 上\")\r\n\r\n\r\n\r\n\r\n\r\n\r\n      },\r\n      textarea_linechange() { uni.__f__('log','at pages/component/textarea/textarea.uvue:61',\"输入框行数变化时调用，event.detail = {height: 0, height: 0, lineCount: 0}\") },\r\n      textarea_blur() { uni.__f__('log','at pages/component/textarea/textarea.uvue:62',\"输入框失去焦点时触发，event.detail = {value, cursor}\") },\r\n      textarea_keyboardheightchange() { uni.__f__('log','at pages/component/textarea/textarea.uvue:63',\"键盘高度发生变化的时候触发此事件，event.detail = {height: height, duration: duration}\") },\r\n      textarea_focus(event: UniTextareaFocusEvent) {\r\n        this.jest_result = event.detail.height >= 0\r\n      },\r\n      textarea_change(event: UniInputChangeEvent) {\r\n        uni.__f__('log','at pages/component/textarea/textarea.uvue:68',\"textarea_change\", event.detail.value);\r\n        this.changeValue = event.detail.value\r\n      },\r\n      change_adjust_position_boolean(checked : boolean) { this.adjust_position_boolean = checked },\r\n      change_show_confirm_bar_boolean(checked : boolean) { this.show_confirm_bar_boolean = checked },\r\n      change_fixed_boolean(checked : boolean) { this.fixed_boolean = checked },\r\n      change_auto_height_boolean(checked : boolean) { this.auto_height_boolean = checked },\r\n      change_confirm_hold_boolean(checked : boolean) { this.confirm_hold_boolean = checked },\r\n      change_focus_boolean(checked : boolean) { this.focus_boolean = checked },\r\n      change_auto_focus_boolean(checked : boolean) { this.auto_focus_boolean = checked },\r\n      change_cursor_color_boolean(checked : boolean) { if (checked) { this.cursor_color = \"transparent\" } else { this.cursor_color = \"#3393E2\" } },\r\n      radio_change_inputmode_enum(checked : number) { this.inputmode_enum_current = checked },\r\n      radio_change_confirm_type(checked : number) { this.confirm_type_current = checked },\r\n      setSelection: function (selectionStart : number, selectionEnd : number) {\r\n        this.isSelectionFocus = true;\r\n        this.selectionStart = selectionStart;\r\n        this.selectionEnd = selectionEnd;\r\n      },\r\n      onSelectionBlurChange() {\r\n      this.isSelectionFocus = false;\r\n        this.selectionEnd = 0;\r\n      },\r\n      changeHoldKeyboard(event : UniSwitchChangeEvent) {\r\n        const checked = event.detail.value;\r\n        this.hold_keyboard = checked;\r\n      },\r\n      changeAdjustPosition(event : UniSwitchChangeEvent) {\r\n        const checked = event.detail.value;\r\n        this.adjust_position = checked;\r\n      },\r\n      change_disabled_boolean(checked : boolean) {\r\n        this.disabled = checked\r\n      },\r\n      getBoundingClientRectForTest() : DOMRect | null {\r\n        return uni.getElementById('test-width')?.getBoundingClientRect();\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<template>\r\n\r\n\r\n\r\n    <view class=\"main\">\r\n      <textarea :value=\"default_value\" id=\"uni-textarea\" class=\"uni-textarea\" :auto-focus=\"true\" :focus=\"focus_boolean\"\r\n        :confirm-hold=\"confirm_hold_boolean\" :auto-height=\"auto_height_boolean\" :fixed=\"fixed_boolean\"\r\n        :show-confirm-bar=\"show_confirm_bar_boolean\" :adjust-position=\"adjust_position_boolean\"\r\n        :cursor-color=\"cursor_color\" :cursor=\"cursor\" :placeholder=\"placeholder_value\"\r\n        :inputmode=\"inputmode_enum[inputmode_enum_current].name\"\r\n        :confirm-type=\"confirm_type_list[confirm_type_current].name\" :disabled=\"disabled\" @click=\"textarea_click\"\r\n        @touchstart=\"textarea_touchstart\" @touchmove=\"textarea_touchmove\" @touchcancel=\"textarea_touchcancel\"\r\n        @touchend=\"textarea_touchend\" @tap=\"textarea_tap\" @longpress=\"textarea_longpress\" @confirm=\"textarea_confirm\"\r\n        @input=\"textarea_input\" @linechange=\"textarea_linechange\" @blur=\"textarea_blur\"\r\n        @keyboardheightchange=\"textarea_keyboardheightchange\" @focus=\"textarea_focus\" @change=\"textarea_change\"\r\n        style=\"padding: 10px; border: 1px solid #666;height: 200px\" />\r\n    </view>\r\n    <view style=\"margin-bottom: 40px;\">\r\n      <boolean-data :defaultValue=\"false\" title=\"键盘弹起时，是否自动上推页面（限非 Web 平台）\"\r\n        @change=\"change_adjust_position_boolean\"></boolean-data>\r\n      <boolean-data :defaultValue=\"false\" title=\"是否自动增高，设置auto-height时，style.height不生效\"\r\n        @change=\"change_auto_height_boolean\"></boolean-data>\r\n      <boolean-data :defaultValue=\"focus_boolean\" title=\"获取焦点\" @change=\"change_focus_boolean\"></boolean-data>\r\n      <boolean-data :defaultValue=\"true\" title=\"首次自动获取焦点\" @change=\"change_auto_focus_boolean\"></boolean-data>\r\n      <boolean-data :defaultValue=\"false\" title=\"改变光标颜色为透明\" @change=\"change_cursor_color_boolean\"></boolean-data>\r\n      <boolean-data :defaultValue=\"false\" title=\"设置禁用输入框\"\r\n        @change=\"change_disabled_boolean\"></boolean-data>\r\n      <enum-data :items=\"confirm_type_list\" title=\"confirm-type，设置键盘右下角按钮。（Android仅支持return）\"\r\n        @change=\"radio_change_confirm_type\"></enum-data>\r\n      <boolean-data :defaultValue=\"false\" title=\"点击软键盘右下角按钮时是否保持键盘不收起(confirm-type为return时必然不收起)\"\r\n        @change=\"change_confirm_hold_boolean\"></boolean-data>\r\n      <enum-data :items=\"inputmode_enum\" title=\"input-mode，控制软键盘类型。（仅限 Web 平台符合条件的高版本浏览器或webview）。\"\r\n        @change=\"radio_change_inputmode_enum\"></enum-data>\r\n      <boolean-data :defaultValue=\"false\" title=\"是否显示键盘上方带有“完成”按钮那一栏（仅限小程序平台）\"\r\n        @change=\"change_show_confirm_bar_boolean\"></boolean-data>\r\n      <boolean-data :defaultValue=\"false\" title=\"如果 textarea 是在一个 position:fixed 的区域，需要显示指定属性 fixed 为 true（仅限小程序平台）\"\r\n        @change=\"change_fixed_boolean\"></boolean-data>\r\n\r\n\r\n      <view class=\"title-wrap\">\r\n        <view>maxlength 输入最大长度为10</view>\r\n      </view>\r\n      <view class=\"textarea-wrap\">\r\n        <textarea id=\"textarea-instance-maxlength\" class=\"textarea-instance\" :value=\"textareaMaxLengthValue\"\r\n          :maxlength=\"10\" />\r\n      </view>\r\n\r\n      <view class=\"title-wrap\">\r\n        <view>cursor-spacing、placeholder-class、placeholder-style例子(harmony 不支持设置 placeholder backgroundColor)</view>\r\n      </view>\r\n      <view class=\"textarea-wrap\">\r\n        <textarea id=\"textarea-height-exception\" class=\"textarea-instance\" placeholder=\"底部textarea测试键盘遮挡\"\r\n          placeholder-class=\"placeholder\" placeholder-style=\"background-color:red\" :cursor-spacing=\"300\" />\r\n      </view>\r\n      <view class=\"title-wrap\">\r\n        <view @click=\"setSelection(2, 5)\">设置输入框聚焦时光标的起始位置和结束位置（点击生效）</view>\r\n      </view>\r\n      <view class=\"textarea-wrap\">\r\n        <textarea id=\"textarea-instance-2\" class=\"textarea-instance\" value=\"Hello UniApp X Textarea TestCase\" :focus=\"isSelectionFocus\"\r\n          :selection-start=\"selectionStart\" :selection-end=\"selectionEnd\" @blur=\"onSelectionBlurChange\" />\r\n      </view>\r\n\r\n      <view class=\"title-wrap\">\r\n        <view>设置hold-keyboard</view>\r\n        <switch style=\"margin-left: 10px;\" @change=\"changeHoldKeyboard\" :checked=\"hold_keyboard\"></switch>\r\n      </view>\r\n      <view class=\"textarea-wrap\">\r\n        <textarea class=\"textarea-instance\" :hold-keyboard=\"hold_keyboard\" />\r\n      </view>\r\n      <view class=\"title-wrap\">\r\n        <view>同时存在 v-model 和 value</view>\r\n      </view>\r\n      <!-- harmony 不符合预期因为 switch 组件存在时，textarea 非预期 update 导致 -->\r\n      <view class=\"textarea-wrap\">\r\n          <textarea id=\"both-model-value\" class=\"textarea-instance\" v-model='defaultModel' value='456'></textarea>\r\n      </view>\r\n\r\n      <view class=\"title-wrap\">\r\n        <view>设置adjust-position</view>\r\n        <switch style=\"margin-left: 10px;\" @change=\"changeAdjustPosition\" :checked=\"adjust_position\"></switch>\r\n      </view>\r\n      <view class=\"textarea-wrap\">\r\n        <textarea class=\"textarea-instance\" :adjust-position=\"adjust_position\" />\r\n      </view>\r\n      <view v-if=\"isAutoTest\" class=\"textarea-wrap\">\r\n        <textarea id=\"test-width\" class=\"test-width\" value=\"123456\" placeholder=\"\" />\r\n      </view>\r\n      <view class=\"title-wrap\">\r\n        <view>设置line-height</view>\r\n      </view>\r\n      <view class=\"textarea-wrap\">\r\n        <textarea class=\"textarea-instance\" style=\"line-height: 1.2em;\" value=\"设置line-height为1.2em\" ></textarea>\r\n      </view>\r\n      <view class=\"title-wrap\">\r\n        <view>设置max-height与auto-height</view>\r\n      </view>\r\n      <view class=\"textarea-wrap\">\r\n        <textarea class=\"textarea-instance\" style=\"max-height: 50px;\" auto-height=\"true\" :value=\"default_value\"></textarea>\r\n      </view>\r\n    </view>\r\n\r\n\r\n\r\n</template>\r\n\r\n<style>\r\n  .main {\r\n    min-height: 100px;\r\n    padding: 5px 0;\r\n    border-bottom: 1px solid rgba(0, 0, 0, 0.06);\r\n    flex-direction: row;\r\n    justify-content: center;\r\n  }\r\n\r\n  .test-width {\r\n    width: 100px;\r\n    height: 100px;\r\n    background-color: aqua;\r\n  }\r\n\r\n  .textarea-wrap {\r\n    flex-direction: row;\r\n    justify-content: center;\r\n  }\r\n\r\n  .title-wrap {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    margin-left: 10px;\r\n  }\r\n\r\n  .textarea-instance {\r\n    flex: 1;\r\n    border: 1 solid #666;\r\n    margin: 10px;\r\n  }\r\n\r\n  .placeholder {\r\n    background-color: yellow;\r\n  }\r\n</style>\r\n","import MiniProgramPage from 'W:/Workplace/2.小程序/lihai-app/pages/component/textarea/textarea.uvue'\nwx.createPage(MiniProgramPage)"],"names":["defineComponent","ItemType","uni"],"mappings":"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"}