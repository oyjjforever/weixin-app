{"version":3,"file":"slider-in-swiper.js","sources":["pages/component/slider/slider-in-swiper.uvue","../../../Program Files/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvY29tcG9uZW50L3NsaWRlci9zbGlkZXItaW4tc3dpcGVyLnV2dWU"],"sourcesContent":["<template>\r\n  <view class=\"swiper-list\">\r\n    <scroll-view ref=\"tabScroll\" class=\"swiper-tabs\" direction=\"horizontal\" :show-scrollbar=\"false\">\r\n      <view class=\"flex-row\">\r\n        <text ref=\"swipertab\" space=\"nbsp\" class=\"swiper-tabs-item\"\r\n          :class=\"swiperIndex==index ? 'swiper-tabs-item-active' : ''\" v-for=\"(item, index) in swiperList\" :key=\"index\"\r\n          @click=\"onTabClick(index)\">\r\n          {{item.title}}\r\n        </text>\r\n      </view>\r\n      <view ref=\"indicator\" class=\"swiper-tabs-indicator\"></view>\r\n    </scroll-view>\r\n    <swiper ref=\"swiper\" class=\"swiper-view\" :current=\"swiperIndex\" @transition=\"onSwiperTransition\"\r\n      @animationfinish=\"onSwiperAnimationfinish\">\r\n      <swiper-item class=\"swiper-item\" v-for=\"(_, index) in swiperList\" :key=\"index\">\r\n        <text class=\"uni-title\">显示当前value</text>\r\n        <slider :value=\"50\" :show-value=\"true\" />\r\n\r\n        <text class=\"uni-title\">设置步进:step=10跳动</text>\r\n        <slider :value=\"60\" :step=\"10\" />\r\n\r\n        <text class=\"uni-title\">浮点步进:step=0.01跳动</text>\r\n        <slider :value=\"0.5\" :min=\"0\" :max=\"1\" :step=\"0.01\" :show-value=\"true\" />\r\n\r\n        <text class=\"uni-title\">设置最小/最大值</text>\r\n        <slider :value=\"100\" :min=\"50\" :max=\"200\" :show-value=\"true\" />\r\n\r\n        <text class=\"uni-title\">不同颜色和大小的滑块</text>\r\n        <slider id=\"slider-custom-color-and-size\" :value=\"sliderValue\" :backgroundColor=\"sliderBackgroundColor\"\r\n          :activeColor=\"sliderActiveColor\" :activeBackgroundColor=\"sliderActiveColor\" :blockColor=\"sliderBlockColor\"\r\n          :foreColor=\"sliderBlockColor\" :block-size=\"sliderBlockSize\" />\r\n      </swiper-item>\r\n    </swiper>\r\n  </view>\r\n</template>\r\n\r\n<script lang=\"uts\">\r\n  type SwiperTabsItem = {\r\n    x : number,\r\n    w : number\r\n  }\r\n\r\n  type SwiperViewItem = {\r\n    title : string,\r\n  }\r\n\r\n  /**\r\n   * 根据权重在两个值之间执行线性插值.\r\n   * @constructor\r\n   * @param {number} value1 - 第一个值，该值应为下限.\r\n   * @param {number} value2 - 第二个值，该值应为上限.\r\n   * @param {number} amount - 应介于 0 和 1 之间，指示内插的权重.\r\n   * @returns {number} 内插值\r\n   */\r\n  function lerpNumber(value1 : number, value2 : number, amount : number) : number {\r\n    return (value1 + (value2 - value1) * amount)\r\n  }\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        swiperList: [] as SwiperViewItem[],\r\n        swiperIndex: 0,\r\n        tabScrollView: null as null | UniElement,\r\n        indicatorNode: null as null | UniElement,\r\n        animationFinishIndex: 0,\r\n        swiperWidth: 0,\r\n        swiperTabsRect: [] as SwiperTabsItem[],\r\n        sliderValue: 50,\r\n        sliderBlockSize: 20,\r\n        sliderBackgroundColor: \"#000000\",\r\n        sliderActiveColor: \"#FFCC33\",\r\n        sliderBlockColor: \"#8A6DE9\",\r\n      }\r\n    },\r\n    onLoad() {\r\n      // 初始化 5 个页签，宽度依次递增，用于演示在滑动 swiper 过程中指示线宽度的线性变化\r\n      for (let i = 0; i < 3; i++) {\r\n        const space = \" \".repeat(i)\r\n        this.swiperList.push({\r\n          title: \"Tab \" + space + i\r\n        } as SwiperViewItem)\r\n      }\r\n    },\r\n    onReady() {\r\n      this.tabScrollView = this.$refs['tabScroll'] as UniElement;\r\n      this.indicatorNode = this.$refs['indicator'] as UniElement;\r\n      (this.$refs[\"swiper\"] as UniElement).getBoundingClientRectAsync()!.then((res : DOMRect) : Promise<void> => {\r\n        this.swiperWidth = res.width\r\n        return this.cacheTabItemsSize()\r\n      }).then(() => {\r\n        this.updateTabIndicator(this.swiperIndex, this.swiperIndex, 1)\r\n      });\r\n    },\r\n    methods: {\r\n      /**\r\n       * 每个页签的点击事件，点击后设置当前 swiper.\r\n       * @constructor\r\n       * @param {number} index - 当前索引，该值应介于 0 和 最大数量之间.\r\n       */\r\n      onTabClick(index : number) {\r\n        this.setSwiperIndex(index, false)\r\n      },\r\n      onSwiperTransition(e : SwiperTransitionEvent) {\r\n        // 微信 skyline 每项完成触发 Animationfinish，偏移值重置\r\n        // 微信 webview 全部完成触发 Animationfinish，偏移值累加\r\n        // 在滑动到下一个项的过程中，再次反向滑动，偏移值递减\r\n        // uni-app-x 和 微信 webview 行为一致\r\n\r\n        const offset_x = e.detail.dx\r\n\r\n        // 计算当前索引并重置差异\r\n        const current_offset_x = offset_x % this.swiperWidth\r\n        const current_offset_i = offset_x / this.swiperWidth\r\n        const current_index = this.animationFinishIndex + parseInt(current_offset_i + '')\r\n\r\n        // 计算目标索引及边界检查\r\n        let move_to_index = current_index\r\n        if (current_offset_x > 0 && move_to_index < this.swiperList.length - 1) {\r\n          move_to_index += 1\r\n        } else if (current_offset_x < 0 && move_to_index > 0) {\r\n          move_to_index -= 1\r\n        }\r\n\r\n        // 计算偏移百分比\r\n        const percentage = Math.abs(current_offset_x) / this.swiperWidth\r\n\r\n        // 通知更新指示线\r\n        if (current_index != move_to_index) {\r\n          this.updateTabIndicator(current_index, move_to_index, percentage)\r\n        }\r\n      },\r\n      /**\r\n       * Swiper滑动动画结束事件.\r\n       */\r\n      onSwiperAnimationfinish(e : SwiperAnimationFinishEvent) {\r\n        this.setSwiperIndex(e.detail.current, true)\r\n\r\n        // 记录上次的索引位置\r\n        this.animationFinishIndex = e.detail.current\r\n      },\r\n      /**\r\n       * 缓存所有页签的左边距和宽度，用于计算指示线在移动过程中的线性变化.\r\n       */\r\n      async cacheTabItemsSize() {\r\n        this.swiperTabsRect.length = 0;\r\n        const tabs = this.$refs[\"swipertab\"] as UniElement[]\r\n        for (let i = 0; i < tabs.length; i++) {\r\n          const element = tabs[i];\r\n\r\n          const rect = await element.getBoundingClientRectAsync()!\r\n          const x = rect.left\r\n          const w = rect.width\r\n\r\n\r\n\r\n\r\n\r\n          this.swiperTabsRect.push({\r\n            x,\r\n            w\r\n          } as SwiperTabsItem)\r\n        }\r\n      },\r\n      /**\r\n       * 设置当前 swiper 选中的索引值.\r\n       * @constructor\r\n       * @param {number} index - 当前索引，该值应介于 0 和 最大数量之间.\r\n       * @param {boolean} updateIndicator - 是否更新指示线.\r\n       */\r\n      setSwiperIndex(index : number, updateIndicator : boolean) {\r\n        if (this.swiperIndex === index) {\r\n          return\r\n        }\r\n\r\n        this.swiperIndex = index\r\n\r\n        if (updateIndicator) {\r\n          this.updateTabIndicator(index, index, 1)\r\n        }\r\n      },\r\n      /**\r\n       * 更新页签指示线的位置和宽度.\r\n       * @constructor\r\n       * @param {number} current_index - 当前索引，该值应介于 0 和 最大数量之间.\r\n       * @param {number} move_to_index - 目标索引，该值应介于 0 和 最大数量之间.\r\n       * @param {number} percentage - 偏移百分比，应介于 0 和 1 之间，用于计算在移动过程中的线性值.\r\n       */\r\n      updateTabIndicator(current_index : number, move_to_index : number, percentage : number) {\r\n        const current_size = this.swiperTabsRect[current_index]\r\n        const move_to_size = this.swiperTabsRect[move_to_index]\r\n\r\n        // 计算指示线 位置 和 宽度 在移动过程中的线性值\r\n        const indicator_line_x = lerpNumber(current_size.x, move_to_size.x, percentage)\r\n        const indicator_line_w = lerpNumber(current_size.w, move_to_size.w, percentage)\r\n\r\n        // 通过 transform 更新指示线，避免重排版\r\n\r\n\r\n\r\n\r\n\r\n        // TODO chrome windows系统 transform scaleX渲染bug\r\n        const x = indicator_line_x\r\n        this.indicatorNode?.style?.setProperty('width', `${indicator_line_w}px`)\r\n        this.indicatorNode?.style?.setProperty('transform', `translateX(${x}px)`)\r\n\r\n\r\n        // 滚动到水平中心位置\r\n        const scroll_x = x - this.swiperWidth / 2\r\n        // app 平台后续支持 scrollTo()\r\n\r\n\r\n\r\n\r\n        this.tabScrollView!.scrollTo({\r\n          left: scroll_x\r\n        })\r\n\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .flex-row {\r\n    flex-direction: row;\r\n    align-self: flex-start;\r\n  }\r\n\r\n  .swiper-list {\r\n    flex: 1;\r\n  }\r\n\r\n  .swiper-tabs {\r\n    background-color: #ffffff;\r\n  }\r\n\r\n  .swiper-tabs-item {\r\n    color: #555;\r\n    font-size: 16px;\r\n    padding: 12px 25px;\r\n    white-space: nowrap;\r\n  }\r\n\r\n  .swiper-tabs-item-active {\r\n    color: #007AFF;\r\n  }\r\n\r\n  .swiper-tabs-indicator {\r\n    width: 1px;\r\n    height: 2px;\r\n    background-color: #007AFF;\r\n  }\r\n\r\n  .swiper-view {\r\n    flex: 1;\r\n  }\r\n\r\n  .swiper-item {\r\n    flex: 1;\r\n    padding: 15px;\r\n  }\r\n</style>\r\n","import MiniProgramPage from 'W:/Workplace/2.小程序/lihai-app/pages/component/slider/slider-in-swiper.uvue'\nwx.createPage(MiniProgramPage)"],"names":["defineComponent"],"mappings":"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"}