{"version":3,"file":"scroll-view-refresher.js","sources":["pages/component/scroll-view/scroll-view-refresher.uvue","../../../Program Files/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvY29tcG9uZW50L3Njcm9sbC12aWV3L3Njcm9sbC12aWV3LXJlZnJlc2hlci51dnVl"],"sourcesContent":["<template>\r\n  <view class=\"container\">\r\n    <page-head title=\"scroll-view 下拉刷新\"></page-head>\r\n    <scroll-view class=\"scroll\" refresher-enabled=true :refresher-triggered=\"refresherTriggered\"\r\n      @refresherrefresh=\"onRefresherrefresh\" @refresherabort=\"onRefresherabort\" @refresherrestore=\"onRefresherrestore\"\r\n      @refresherpulling=\"onRefresherpulling\" @scrolltolower=\"onScrolltolower\" :show-scrollbar=\"showScrollbar\">\r\n      <view v-for=\"key in scrollData\" :key=\"key\">\r\n        <view class=\"scroll-item\">\r\n          <text class=\"scroll-item-title\">{{key}}</text>\r\n        </view>\r\n      </view>\r\n    </scroll-view>\r\n  </view>\r\n</template>\r\n<script lang=\"uts\">\r\n  type RefresherEventTest = {\r\n    type : string;\r\n    target : UniElement | null;\r\n    currentTarget : UniElement | null;\r\n    dy : number;\r\n  }\r\n  export default {\r\n    data() {\r\n      return {\r\n        scrollData: [] as Array<string>,\r\n        refresherTriggered: false,\r\n        refresherrefresh: false,\r\n        refresherrefreshTimes: 0,\r\n        showScrollbar: false,\r\n        // 自动化测试使用\r\n        refresherrefreshTest: \"\",\r\n        onRefresherabortTest: \"\",\r\n        onRefresherrestoreTest: \"\",\r\n        onRefresherpullingTest: \"\"\r\n      };\r\n    },\r\n    onLoad() {\r\n      let lists : Array<string> = []\r\n      for (let i = 0; i < 20; i++) {\r\n        lists.push(\"item---\" + i)\r\n      }\r\n      this.scrollData = lists\r\n    },\r\n\r\n    methods: {\r\n      onRefresherrefresh(e : UniRefresherEvent) {\r\n        this.refresherrefresh = true\r\n        uni.__f__('log','at pages/component/scroll-view/scroll-view-refresher.uvue:48',\"onRefresherrefresh------下拉刷新触发\")\r\n        this.checkEventTest({\r\n          type: e.type,\r\n          target: e.target,\r\n          currentTarget: e.currentTarget,\r\n          dy: e.detail.dy,\r\n        } as RefresherEventTest, 'refresherrefresh')\r\n        this.refresherTriggered = true\r\n        this.refresherrefreshTimes++\r\n        setTimeout(() => {\r\n          this.refresherTriggered = false\r\n        }, 1500)\r\n      },\r\n      onRefresherabort(e : UniRefresherEvent) {\r\n        uni.__f__('log','at pages/component/scroll-view/scroll-view-refresher.uvue:62',\"onRefresherabort------下拉刷新被中止\")\r\n        this.checkEventTest({\r\n          type: e.type,\r\n          target: e.target,\r\n          currentTarget: e.currentTarget,\r\n          dy: e.detail.dy,\r\n        } as RefresherEventTest, 'refresherabort')\r\n      },\r\n      onRefresherrestore(e : UniRefresherEvent) {\r\n        this.refresherrefresh = false\r\n        uni.__f__('log','at pages/component/scroll-view/scroll-view-refresher.uvue:72',\"onRefresherrestore------下拉刷新被复位\")\r\n        this.checkEventTest({\r\n          type: e.type,\r\n          target: e.target,\r\n          currentTarget: e.currentTarget,\r\n          dy: e.detail.dy,\r\n        } as RefresherEventTest, 'refresherrestore')\r\n      },\r\n      onRefresherpulling(e : UniRefresherEvent) {\r\n        uni.__f__('log','at pages/component/scroll-view/scroll-view-refresher.uvue:81',\"onRefresherpulling------拉刷新控件被下拉-dy=\" + e.detail.dy)\r\n        this.checkEventTest({\r\n          type: e.type,\r\n          target: e.target,\r\n          currentTarget: e.currentTarget,\r\n          dy: e.detail.dy,\r\n        } as RefresherEventTest, 'refresherpulling')\r\n      },\r\n      onScrolltolower(e : UniScrollToLowerEvent) {\r\n        uni.__f__('log','at pages/component/scroll-view/scroll-view-refresher.uvue:90',\"onScrolltolower 滚动到底部-----\" + e.detail.direction)\r\n      },\r\n      // 自动化测试专用（由于事件event参数对象中存在循环引用，在ios端JSON.stringify报错，自动化测试无法page.data获取）\r\n      checkEventTest(e : RefresherEventTest, eventName : String) {\r\n\r\n\r\n\r\n\r\n        const isPass = true\r\n\r\n        const result = isPass ? `${eventName}:Success` : `${eventName}:Fail`;\r\n        switch (eventName) {\r\n          case 'refresherrefresh':\r\n            this.refresherrefreshTest = result\r\n            break;\r\n          case 'refresherpulling':\r\n            this.onRefresherpullingTest = result\r\n            break;\r\n          case 'refresherrestore':\r\n            this.onRefresherrestoreTest = result\r\n            break;\r\n          case 'refresherabort':\r\n            this.onRefresherabortTest = result\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      },\r\n      //自动化测试专用\r\n      setPageStyle(pageStyle: UTSJSONObject) {\r\n        const pages = getCurrentPages();\r\n        const currentPage = pages[pages.length - 1];\r\n        currentPage.setPageStyle(pageStyle);\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n  }\r\n\r\n  .scroll {\r\n    background-color: #eee;\r\n    position: relative;\r\n    width: 100%;\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-color: red;\r\n    border-radius: 6px;\r\n  }\r\n\r\n  .scroll-item {\r\n    margin-left: 6px;\r\n    margin-right: 6px;\r\n    margin-top: 6px;\r\n    background-color: #fff;\r\n    border-radius: 4px;\r\n  }\r\n\r\n  .scroll-item-title {\r\n    width: 100%;\r\n    height: 60px;\r\n    line-height: 60px;\r\n    text-align: center;\r\n    color: #555;\r\n  }\r\n</style>\r\n","import MiniProgramPage from 'W:/Workplace/2.小程序/lihai-app/pages/component/scroll-view/scroll-view-refresher.uvue'\nwx.createPage(MiniProgramPage)"],"names":["defineComponent","uni"],"mappings":";;MAeO,2BAAiB,IAAA,QAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAMtB,MAAA,YAAeA,8BAAA;AAAA,EACb,OAAI;AACF,WAAO;AAAA,MACL,YAAY,CAAmB;AAAA,MAC/B,oBAAoB;AAAA,MACpB,kBAAkB;AAAA,MAClB,uBAAuB;AAAA,MACvB,eAAe;AAAA;AAAA,MAEf,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,wBAAwB;AAAA,MACxB,wBAAwB;AAAA;EAE3B;AAAA,EACD,SAAM;AACJ,QAAI,QAAwB,CAAA;AAC5B,aAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AAC3B,YAAM,KAAK,YAAY,CAAC;AAAA,IAC1B;AACA,SAAK,aAAa;AAAA,EACnB;AAAA,EAED,SAAS;AAAA,IACP,mBAAmB,GAAqB;AACtC,WAAK,mBAAmB;AACxBC,oBAAAA,MAAI,MAAM,OAAM,gEAA+D,gCAAgC;AAC/G,WAAK,eAAe,IAAA,mBAAA;AAAA,QAClB,MAAM,EAAE;AAAA,QACR,QAAQ,EAAE;AAAA,QACV,eAAe,EAAE;AAAA,QACjB,IAAI,EAAE,OAAO;AAAA,OACQ,GAAE,kBAAkB;AAC3C,WAAK,qBAAqB;AAC1B,WAAK;AACL,iBAAW,MAAA;AACT,aAAK,qBAAqB;AAAA,MAC3B,GAAE,IAAI;AAAA,IACR;AAAA,IACD,iBAAiB,GAAqB;AACpCA,oBAAAA,MAAI,MAAM,OAAM,gEAA+D,+BAA+B;AAC9G,WAAK,eAAe,IAAA,mBAAA;AAAA,QAClB,MAAM,EAAE;AAAA,QACR,QAAQ,EAAE;AAAA,QACV,eAAe,EAAE;AAAA,QACjB,IAAI,EAAE,OAAO;AAAA,OACQ,GAAE,gBAAgB;AAAA,IAC1C;AAAA,IACD,mBAAmB,GAAqB;AACtC,WAAK,mBAAmB;AACxBA,oBAAAA,MAAI,MAAM,OAAM,gEAA+D,iCAAiC;AAChH,WAAK,eAAe,IAAA,mBAAA;AAAA,QAClB,MAAM,EAAE;AAAA,QACR,QAAQ,EAAE;AAAA,QACV,eAAe,EAAE;AAAA,QACjB,IAAI,EAAE,OAAO;AAAA,OACQ,GAAE,kBAAkB;AAAA,IAC5C;AAAA,IACD,mBAAmB,GAAqB;AACtCA,0BAAI,MAAM,OAAM,gEAA+D,yCAAyC,EAAE,OAAO,EAAE;AACnI,WAAK,eAAe,IAAA,mBAAA;AAAA,QAClB,MAAM,EAAE;AAAA,QACR,QAAQ,EAAE;AAAA,QACV,eAAe,EAAE;AAAA,QACjB,IAAI,EAAE,OAAO;AAAA,OACQ,GAAE,kBAAkB;AAAA,IAC5C;AAAA,IACD,gBAAgB,GAAyB;AACvCA,0BAAI,MAAM,OAAM,gEAA+D,+BAA+B,EAAE,OAAO,SAAS;AAAA,IACjI;AAAA;AAAA,IAED,eAAe,GAAwB,WAAkB;AAOvD,YAAM,SAAkB,GAAG,SAAS;AACpC,cAAQ,WAAS;AAAA,QACf,KAAK;AACH,eAAK,uBAAuB;AAC5B;AAAA,QACF,KAAK;AACH,eAAK,yBAAyB;AAC9B;AAAA,QACF,KAAK;AACH,eAAK,yBAAyB;AAC9B;AAAA,QACF,KAAK;AACH,eAAK,uBAAuB;AAC5B;AAAA,MAGJ;AAAA,IACD;AAAA;AAAA,IAED,aAAa,WAAwB;AACnC,YAAM,QAAQ;AACd,YAAM,cAAc,MAAM,MAAM,SAAS,CAAC;AAC1C,kBAAY,aAAa,SAAS;AAAA,IACpC;AAAA,EACF;CACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3HH,GAAG,WAAW,eAAe;"}