{"version":3,"file":"scroll-view-refresher-props.js","sources":["pages/component/scroll-view/scroll-view-refresher-props.uvue","../../../Program Files/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvY29tcG9uZW50L3Njcm9sbC12aWV3L3Njcm9sbC12aWV3LXJlZnJlc2hlci1wcm9wcy51dnVl"],"sourcesContent":["<template>\r\n  <view class=\"page-scroll-view\">\r\n    <page-head title=\"下拉刷新的scroll-view属性示例\"></page-head>\r\n    <view class=\"uni-margin-wrap\">\r\n      <scroll-view direction=\"vertical\" :refresher-enabled=\"refresherEnabled\" :refresher-threshold=\"refresherThreshold\"\r\n        :refresher-default-style=\"refresherDefaultStyle\" :refresher-background=\"refresherBackground\"\r\n        :refresher-triggered=\"refresherTriggered\" @refresherpulling=\"refresherpulling\"\r\n        @refresherrefresh=\"refresherrefresh\" @refresherrestore=\"refresherrestore\" @refresherabort=\"refresherabort\"\r\n        style=\"width: 100%;height: 100%;\">\r\n        <view class=\"item\" :id=\"item.id\" v-for=\"(item,_) in items\">\r\n          <text class=\"uni-text\">{{item.label}}</text>\r\n        </view>\r\n      </scroll-view>\r\n    </view>\r\n\r\n    <scroll-view class=\"uni-list\" style=\"padding-top: 16px;\" :showScrollbar=\"true\">\r\n      <view class=\"uni-list-cell-padding\">\r\n        <text class=\"refresher-tips\">**下拉刷新的属性设置需要先打开下拉刷新开关**</text>\r\n      </view>\r\n      <view class=\"uni-list-cell uni-list-cell-padding\">\r\n        <text>是否开启下拉刷新</text>\r\n        <switch :checked=\"refresherEnabled\" @change=\"handleTrunOnRefresher\"></switch>\r\n      </view>\r\n      <view class=\"uni-list-cell uni-list-cell-padding\">\r\n        <text>设置下拉刷新状态</text>\r\n        <switch :disabled=\"!refresherEnabled\" :checked=\"refresherTriggered\"\r\n          @change=\"refresherTriggered=!refresherTriggered\"></switch>\r\n      </view>\r\n\r\n      <view class=\"uni-list-cell uni-list-cell-padding\">\r\n        <text>设置下拉刷新阈值</text>\r\n        <input class=\"uni-list-cell-input\" :disabled=\"!refresherEnabled\" :value=\"refresherThreshold\" type=\"number\"\r\n          @input=\"handleRefresherThresholdInput\" />\r\n      </view>\r\n\r\n      <view class=\"uni-list-cell uni-list-cell-padding\">\r\n        <text>设置下拉刷新区域背景颜色</text>\r\n        <input class=\"uni-list-cell-input\" :disabled=\"!refresherEnabled\" :value=\"refresherBackground\"\r\n          @input=\"handleRefresherBackground\" />\r\n      </view>\r\n\r\n      <view class=\"uni-list-cell-padding\">\r\n        <text>设置下拉刷新默认样式</text>\r\n        <view class=\"switch-refresher-group\">\r\n          <button class=\"switch-refresher-style\" type=\"primary\" size=\"mini\"\r\n            @click=\"refresherDefaultStyle = `none`\">none</button>\r\n          <button class=\"switch-refresher-style\" type=\"primary\" size=\"mini\"\r\n            @click=\"refresherDefaultStyle = `black`\">black</button>\r\n          <button class=\"switch-refresher-style\" type=\"primary\" size=\"mini\"\r\n            @click=\"refresherDefaultStyle = `white`\">white</button>\r\n        </view>\r\n      </view>\r\n    </scroll-view>\r\n  </view>\r\n</template>\r\n\r\n<script lang=\"uts\">\r\n  type Item = {\r\n    id : string,\r\n    label : string,\r\n  }\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        items: [] as Item[],\r\n        refresherEnabled: true,\r\n        refresherTriggered: false,\r\n        refresherThreshold: 45,\r\n        refresherDefaultStyle: \"black\",\r\n        refresherBackground: \"transparent\",\r\n      }\r\n    },\r\n    onLoad() {\r\n      for (let i = 0; i < 10; i++) {\r\n        const item = {\r\n          id: \"item\" + i,\r\n          label: \"item\" + i,\r\n        } as Item;\r\n        this.items.push(item);\r\n      }\r\n    },\r\n    methods: {\r\n      handleTrunOnRefresher() {\r\n        this.refresherTriggered = false;\r\n        //不能同时关闭下拉状态和关闭下拉刷新。\r\n        setTimeout(() => {\r\n          this.refresherEnabled = !this.refresherEnabled;\r\n        }, 0)\r\n      },\r\n      handleRefresherThresholdInput(e : InputEvent) {\r\n        const value = e.detail.value;\r\n        if (value == \"\") {\r\n          this.refresherThreshold = 45;\r\n        } else {\r\n          this.refresherThreshold = parseInt(e.detail.value);\r\n        }\r\n      },\r\n      handleRefresherBackground(e : InputEvent) {\r\n        const value = e.detail.value;\r\n        this.refresherBackground = value;\r\n      },\r\n      //响应事件\r\n      refresherpulling() {\r\n        uni.__f__('log','at pages/component/scroll-view/scroll-view-refresher-props.uvue:105',\"下拉刷新控件被下拉\");\r\n      },\r\n      refresherrefresh() {\r\n        uni.__f__('log','at pages/component/scroll-view/scroll-view-refresher-props.uvue:108',\"下拉刷新被触发\");\r\n        this.refresherTriggered = true;\r\n        //不能同时关闭下拉状态和关闭下拉刷新。\r\n        setTimeout(() => {\r\n          this.refresherTriggered = false;\r\n        }, 1500)\r\n      },\r\n      refresherrestore() {\r\n        uni.__f__('log','at pages/component/scroll-view/scroll-view-refresher-props.uvue:116',\"下拉刷新被复位\");\r\n      },\r\n      refresherabort() {\r\n        uni.__f__('log','at pages/component/scroll-view/scroll-view-refresher-props.uvue:119',\"下拉刷新被中止\");\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .uni-margin-wrap {\r\n    height: 200px;\r\n    margin: 0 25px 25px 25px;\r\n  }\r\n\r\n  .item {\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 200px;\r\n    width: 100%;\r\n    background-color: azure;\r\n    border-width: 1px;\r\n    border-style: solid;\r\n    border-color: chocolate;\r\n  }\r\n\r\n  .refresher-tips {\r\n    font-size: 12px;\r\n    text-align: center;\r\n    color: red;\r\n  }\r\n\r\n  .uni-text {\r\n    color: black;\r\n    font-size: 50px;\r\n  }\r\n\r\n  .uni-list {\r\n    flex: 1;\r\n  }\r\n\r\n  .uni-list-cell-input {\r\n    max-width: 100px;\r\n    border: 1px solid #ccc;\r\n    text-align: center;\r\n  }\r\n\r\n  .switch-refresher-group {\r\n    flex-direction: row;\r\n    margin-top: 5px;\r\n  }\r\n\r\n  .switch-refresher-style {\r\n    padding: 2px 10px;\r\n    margin-right: 5px;\r\n  }\r\n</style>\n","import MiniProgramPage from 'W:/Workplace/2.小程序/lihai-app/pages/component/scroll-view/scroll-view-refresher-props.uvue'\nwx.createPage(MiniProgramPage)"],"names":["defineComponent","uni"],"mappings":";;MAyDO;;;;;;;;;;;;;;;;;;;;;AAKL,MAAA,YAAeA,8BAAA;AAAA,EACb,OAAI;AACF,WAAO;AAAA,MACL,OAAO,CAAY;AAAA,MACnB,kBAAkB;AAAA,MAClB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,uBAAuB;AAAA,MACvB,qBAAqB;AAAA;EAExB;AAAA,EACD,SAAM;AACJ,aAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AAC3B,YAAM,OAAO,IAAA,KAAA;AAAA,QACX,IAAI,SAAS;AAAA,QACb,OAAO,SAAS;AAAA,MACT,CAAA;AACT,WAAK,MAAM,KAAK,IAAI;AAAA,IACtB;AAAA,EACD;AAAA,EACD,SAAS;AAAA,IACP,wBAAqB;AACnB,WAAK,qBAAqB;AAE1B,iBAAW,MAAA;AACT,aAAK,mBAAmB,CAAC,KAAK;AAAA,MAC/B,GAAE,CAAC;AAAA,IACL;AAAA,IACD,8BAA8B,GAAc;AAC1C,YAAM,QAAQ,EAAE,OAAO;AACvB,UAAI,SAAS,IAAI;AACf,aAAK,qBAAqB;AAAA,MAC1B,OAAK;AACL,aAAK,qBAAqB,SAAS,EAAE,OAAO,KAAK;AAAA,MACnD;AAAA,IACD;AAAA,IACD,0BAA0B,GAAc;AACtC,YAAM,QAAQ,EAAE,OAAO;AACvB,WAAK,sBAAsB;AAAA,IAC5B;AAAA;AAAA,IAED,mBAAgB;AACdC,oBAAAA,MAAI,MAAM,OAAM,uEAAsE,WAAW;AAAA,IAClG;AAAA,IACD,mBAAgB;AACdA,oBAAAA,MAAI,MAAM,OAAM,uEAAsE,SAAS;AAC/F,WAAK,qBAAqB;AAE1B,iBAAW,MAAA;AACT,aAAK,qBAAqB;AAAA,MAC3B,GAAE,IAAI;AAAA,IACR;AAAA,IACD,mBAAgB;AACdA,oBAAAA,MAAI,MAAM,OAAM,uEAAsE,SAAS;AAAA,IAChG;AAAA,IACD,iBAAc;AACZA,oBAAAA,MAAI,MAAM,OAAM,uEAAsE,SAAS;AAAA,IACjG;AAAA,EACF;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxHF,GAAG,WAAW,eAAe;"}