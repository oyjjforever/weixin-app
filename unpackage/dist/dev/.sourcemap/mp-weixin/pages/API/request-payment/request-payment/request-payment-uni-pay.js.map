{"version":3,"file":"request-payment-uni-pay.js","sources":["pages/API/request-payment/request-payment/request-payment-uni-pay.uvue","../../../Program Files/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvQVBJL3JlcXVlc3QtcGF5bWVudC9yZXF1ZXN0LXBheW1lbnQvcmVxdWVzdC1wYXltZW50LXVuaS1wYXkudXZ1ZQ"],"sourcesContent":["<template>\r\n  <view class=\"app\">\r\n    <view class=\"uni-common-mb\">\r\n      <text>如对当前页面的支付示例功能有任何疑问，通过电子邮件：service@dcloud.io 联系我们</text>\r\n    </view>\r\n    <view v-if=\"errMsg != ''\">\r\n      <text class=\"err-msg\">注意：{{ errMsg }}</text>\r\n    </view>\r\n    <view>\r\n      <view class=\"label\">支付单号：</view>\r\n      <view><input class=\"input\" v-model=\"out_trade_no\" placeholder=\"点击发起支付会自动生成\" /></view>\r\n    </view>\r\n    <view>\r\n      <view class=\"label\">支付金额（单位分，100=1元）：</view>\r\n      <view><input class=\"input\" v-model=\"total_fee\" /></view>\r\n    </view>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    <button class=\"button\" @click=\"createOrder('wxpay')\">发起支付（微信）</button>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    <button class=\"button\" @click=\"getOrderPopup(true)\">查询支付状态</button>\r\n    <button class=\"button\"\r\n      @click=\"pageTo('/uni_modules/uni-pay-x/pages/success/success?out_trade_no=test2024030501-1&order_no=test2024030501&total_fee=1&adpid=1000000001&return_url=/pages/API/request-payment/request-payment/order-detail')\">支付成功页面示例</button>\r\n\r\n\r\n\r\n\r\n    <!-- 查询支付的弹窗 -->\r\n    <uni-pay-popup ref=\"getOrderPopupRef\" type=\"center\">\r\n      <scroll-view direction=\"vertical\" class=\"get-order-popup\">\r\n        <view class=\"label\">插件支付单号：</view>\r\n        <view class=\"mt20\">\r\n          <input class=\"input pd2030\" v-model=\"out_trade_no\" placeholder=\"请输入\" />\r\n          <view><text class=\"tips\">插件支付单号和第三方交易单号2选1填即可</text> </view>\r\n        </view>\r\n        <view class=\"label\">第三方交易单号：</view>\r\n        <view class=\"mt20\">\r\n          <input class=\"input pd2030\" v-model=\"transaction_id\" placeholder=\"请输入\" />\r\n          <view><text class=\"tips\">可从支付宝账单（订单号）、微信账单（交易单号）中复制</text></view>\r\n        </view>\r\n        <view class=\"mt20\">\r\n          <button class=\"button\" @click=\"getOrder\">查询支付状态</button>\r\n        </view>\r\n        <view class=\"mt20\" v-if=\"getOrderRes['transaction_id']\">\r\n          <view class=\"table\">\r\n            <view class=\"table-tr\">\r\n              <view class=\"table-td label\"><text class=\"text align-left\">订单描述</text></view>\r\n              <view class=\"table-td\"><text class=\"text align-right\">{{ getOrderRes['description'] }}</text></view>\r\n            </view>\r\n            <view class=\"table-tr\">\r\n              <view class=\"table-td label\"><text class=\"text align-left\">支付金额</text></view>\r\n              <view class=\"table-td\"><text\r\n                  class=\"text align-right\">{{ amountFormat(getOrderRes.getNumber('total_fee')) }}</text></view>\r\n            </view>\r\n            <view class=\"table-tr\">\r\n              <view class=\"table-td label\"><text class=\"text align-left\">支付方式</text></view>\r\n              <view class=\"table-td\"><text\r\n                  class=\"text align-right\">{{ providerFormat(getOrderRes['provider'] as string) }}</text></view>\r\n            </view>\r\n            <view class=\"table-tr\">\r\n              <view class=\"table-td label\"><text class=\"text align-left\">第三方交易单号</text></view>\r\n              <view class=\"table-td\"><text class=\"text align-right\">{{ getOrderRes['transaction_id'] }}</text></view>\r\n            </view>\r\n            <view class=\"table-tr\">\r\n              <view class=\"table-td label\"><text class=\"text align-left\">插件支付单号</text></view>\r\n              <view class=\"table-td\"><text class=\"text align-right\">{{ getOrderRes['out_trade_no'] }}</text></view>\r\n            </view>\r\n            <view class=\"table-tr\">\r\n              <view class=\"table-td label\"><text class=\"text align-left\">回调状态</text></view>\r\n              <view class=\"table-td\"><text\r\n                  class=\"text align-right\">{{ getOrderRes.getBoolean('user_order_success') != null && getOrderRes.getBoolean('user_order_success') == true ? \"成功\" : \"异常\" }}</text>\r\n              </view>\r\n            </view>\r\n          </view>\r\n        </view>\r\n      </scroll-view>\r\n    </uni-pay-popup>\r\n\r\n\r\n\r\n\r\n\r\n    <!-- <button class=\"button\" @click=\"refund\">发起退款</button>\r\n\t\t<view><text class=\"tips\">发起退款需要admin权限，本示例未对接登录功能</text></view>\r\n\t\t<button class=\"button\" @click=\"getRefund\">查询退款状态</button>\r\n\t\t<button class=\"button\" @click=\"closeOrder\">关闭订单</button> -->\r\n\r\n\r\n\r\n\r\n    <!-- 统一支付组件，注意：vue3下ref不可以等于组件名，因此这里ref=\"pay\" 而不能是 ref=\"uniPay\" -->\r\n    <uni-pay ref=\"payRef\" :adpid=\"adpid\" height=\"450px\"\r\n      return-url=\"/pages/API/request-payment/request-payment/order-detail\" logo=\"/static/logo.png\" @success=\"onSuccess\"\r\n      @create=\"onCreate\" @fail=\"onFail\" @cancel=\"onCancel\"></uni-pay>\r\n  </view>\r\n</template>\r\n\r\n<script lang=\"uts\">\r\n  export default {\r\n    data() {\r\n      return {\r\n        total_fee: \"1\", // 支付金额，单位分 100 = 1元\r\n        order_no: \"\", // 业务系统订单号（即你自己业务系统的订单表的订单号）\r\n        out_trade_no: \"\", // 插件支付单号\r\n        description: \"测试订单\", // 支付描述\r\n        type: \"test\", // 支付回调类型 如 recharge 代表余额充值 goods 代表商品订单（可自定义，任意英文单词都可以，只要你在 uni-pay-co/notify/目录下创建对应的 xxx.js文件进行编写对应的回调逻辑即可）\r\n        openid: \"\", // 微信公众号需要\r\n        custom: {\r\n          a: \"a\",\r\n          b: 1\r\n        } as UTSJSONObject,\r\n        adpid: \"1000000001\", // uni-ad的广告位id\r\n\r\n        transaction_id: \"\", // 查询订单接口的查询条件\r\n        getOrderRes: {} as UTSJSONObject, // 查询订单支付成功后的返回值\r\n        useUniCloud: true,\r\n        errMsg: \"\"\r\n      }\r\n    },\r\n    onLoad(options) {\r\n      uni.__f__('log','at pages/API/request-payment/request-payment/request-payment-uni-pay.uvue:136','onLoad: ', options);\r\n      this.useUniCloud = this.checkUniCloud();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    },\r\n    methods: {\r\n      /**\r\n       * 发起支付（唤起收银台，如果只有一种支付方式，则收银台不会弹出来，会直接使用此支付方式）\r\n       * 在调用此api前，你应该先创建自己的业务系统订单，并获得订单号 order_no，把order_no当参数传给此api，而示例中为了简化跟支付插件无关的代码，这里直接已时间戳生成了order_no\r\n       */\r\n      open() {\r\n        this.order_no = `test` + Date.now();\r\n        this.out_trade_no = `${this.order_no}-1`;\r\n        // 打开支付收银台\r\n        const payInstance = this.$refs[\"payRef\"] as UniPayComponentPublicInstance;\r\n        payInstance.open({\r\n          total_fee: parseInt(this.total_fee), // 支付金额，单位分 100 = 1元\r\n          order_no: this.order_no, // 业务系统订单号（即你自己业务系统的订单表的订单号）\r\n          out_trade_no: this.out_trade_no, // 插件支付单号\r\n          description: this.description, // 支付描述\r\n          type: this.type, // 支付回调类型\r\n          openid: this.openid, // 微信公众号需要\r\n          custom: this.custom, // 自定义数据\r\n          qr_code: this.isPcCom, // 如果是PC端，则强制扫码支付\r\n        });\r\n      },\r\n      /**\r\n       * 发起支付（不唤起收银台，手动指定支付方式）\r\n       * 在调用此api前，你应该先创建自己的业务系统订单，并获得订单号 order_no，把order_no当参数传给此api，而示例中为了简化跟支付插件无关的代码，这里直接已时间戳生成了order_no\r\n       */\r\n      createOrder(provider : string) {\r\n        this.order_no = `test` + Date.now();\r\n        this.out_trade_no = `${this.order_no}-1`;\r\n        // 发起支付\r\n        const payInstance = this.$refs[\"payRef\"] as UniPayComponentPublicInstance;\r\n        payInstance.createOrder({\r\n          provider: provider, // 支付供应商\r\n          total_fee: parseInt(this.total_fee), // 支付金额，单位分 100 = 1元\r\n          order_no: this.order_no, // 业务系统订单号（即你自己业务系统的订单表的订单号）\r\n          out_trade_no: this.out_trade_no, // 插件支付单号\r\n          description: this.description, // 支付描述\r\n          type: this.type, // 支付回调类型\r\n          openid: this.openid, // 微信公众号需要\r\n          custom: this.custom, // 自定义数据\r\n          qr_code: this.isPcCom, // 如果是PC端，则强制扫码支付\r\n        });\r\n      },\r\n      /**\r\n       * 生成支付独立二维码（只返回支付二维码）\r\n       * 在调用此api前，你应该先创建自己的业务系统订单，并获得订单号 order_no，把order_no当参数传给此api，而示例中为了简化跟支付插件无关的代码，这里直接已时间戳生成了order_no\r\n       */\r\n      createQRcode(provider : string) {\r\n        this.order_no = `test` + Date.now();\r\n        this.out_trade_no = `${this.order_no}-1`;\r\n        // 发起支付\r\n        const payInstance = this.$refs[\"payRef\"] as UniPayComponentPublicInstance;\r\n        payInstance.createOrder({\r\n          provider: provider, // 支付供应商\r\n          total_fee: parseInt(this.total_fee), // 支付金额，单位分 100 = 1元\r\n          order_no: this.order_no, // 业务系统订单号（即你自己业务系统的订单表的订单号）\r\n          out_trade_no: this.out_trade_no, // 插件支付单号\r\n          description: this.description, // 支付描述\r\n          type: this.type, // 支付回调类型\r\n          qr_code: true, // 强制扫码支付\r\n          openid: this.openid, // 微信公众号需要\r\n          custom: this.custom, // 自定义数据\r\n        });\r\n      },\r\n      /**\r\n       * 前往自定义收银台页面\r\n       * 在调用此api前，你应该先创建自己的业务系统订单，并获得订单号 order_no，把order_no当参数传给此api，而示例中为了简化跟支付插件无关的代码，这里直接已时间戳生成了order_no\r\n       */\r\n      toPayDesk() {\r\n        this.order_no = `test` + Date.now();\r\n        this.out_trade_no = `${this.order_no}-1`;\r\n        let options = {\r\n          total_fee: parseInt(this.total_fee), // 支付金额，单位分 100 = 1元\r\n          order_no: this.order_no, // 业务系统订单号（即你自己业务系统的订单表的订单号）\r\n          out_trade_no: this.out_trade_no, // 插件支付单号\r\n          description: this.description, // 支付描述\r\n          type: this.type, // 支付回调类型\r\n          openid: this.openid, // 微信公众号需要\r\n          custom: this.custom, // 自定义数据\r\n        };\r\n        let optionsStr = encodeURI(JSON.stringify(options));\r\n        uni.navigateTo({\r\n          url: `/uni_modules/uni-pay-x/pages/pay-desk/pay-desk?options=${optionsStr}`\r\n        });\r\n      },\r\n      // 打开查询订单的弹窗\r\n      getOrderPopup(key : boolean) {\r\n        const getOrderPopupInstance = this.$refs[\"getOrderPopupRef\"] as UniPayPopupComponentPublicInstance;\r\n        if (key) {\r\n          getOrderPopupInstance.open();\r\n        } else {\r\n          getOrderPopupInstance.close();\r\n        }\r\n      },\r\n      // 查询支付状态\r\n      async getOrder() : Promise<void> {\r\n        this.getOrderRes = {} as UTSJSONObject;\r\n        const payInstance = this.$refs[\"payRef\"] as UniPayComponentPublicInstance;\r\n        let getOrderData = {\r\n          await_notify: true\r\n        } as UTSJSONObject;\r\n        if (this.transaction_id != \"\") {\r\n          getOrderData['transaction_id'] = this.transaction_id;\r\n        } else if (this.out_trade_no != \"\") {\r\n          getOrderData['out_trade_no'] = this.out_trade_no;\r\n        }\r\n        let res = await payInstance.getOrder(getOrderData);\r\n        if (res['errCode'] == 0) {\r\n          this.getOrderRes = res.getJSON('pay_order') as UTSJSONObject;\r\n          let obj = {\r\n            \"-1\": \"已关闭\",\r\n            \"1\": \"已支付\",\r\n            \"0\": \"未支付\",\r\n            \"2\": \"已部分退款\",\r\n            \"3\": \"已全额退款\"\r\n          } as UTSJSONObject;\r\n          let status = res['status'] as number;\r\n          let statusStr = status + \"\";\r\n          let title = obj[statusStr] as string;\r\n          uni.showToast({\r\n            title: title,\r\n            icon: \"none\"\r\n          });\r\n        }\r\n      },\r\n      // 发起退款\r\n      async refund() : Promise<void> {\r\n        const payInstance = this.$refs[\"payRef\"] as UniPayComponentPublicInstance;\r\n        let res = await payInstance.refund({\r\n          out_trade_no: this.out_trade_no, // 插件支付单号\r\n        });\r\n        if (res['errCode'] == 0) {\r\n          uni.showToast({\r\n            title: res['errMsg'] as string,\r\n            icon: \"none\"\r\n          });\r\n        }\r\n      },\r\n      // 查询退款状态\r\n      async getRefund() : Promise<void> {\r\n        const payInstance = this.$refs[\"payRef\"] as UniPayComponentPublicInstance;\r\n        let res = await payInstance.getRefund({\r\n          out_trade_no: this.out_trade_no, // 插件支付单号\r\n        });\r\n        if (res['errCode'] == 0) {\r\n          uni.showModal({\r\n            content: res['errMsg'] as string,\r\n            showCancel: false\r\n          });\r\n        }\r\n      },\r\n      // 关闭订单\r\n      async closeOrder() : Promise<void> {\r\n        const payInstance = this.$refs[\"payRef\"] as UniPayComponentPublicInstance;\r\n        let res = await payInstance.closeOrder({\r\n          out_trade_no: this.out_trade_no, // 插件支付单号\r\n        });\r\n        if (res['errCode'] == 0) {\r\n          uni.showModal({\r\n            content: res['errMsg'] as string,\r\n            showCancel: false\r\n          });\r\n        }\r\n      },\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      // 监听事件 - 支付订单创建成功（此时用户还未支付）\r\n      onCreate(res : UTSJSONObject) {\r\n        uni.__f__('log','at pages/API/request-payment/request-payment/request-payment-uni-pay.uvue:367','create: ', res);\r\n        // 如果只是想生成支付二维码，不需要组件自带的弹窗，则在这里可以获取到支付二维码 qr_code_image\r\n      },\r\n      // 监听事件 - 支付成功\r\n      onSuccess(res : UTSJSONObject) {\r\n        uni.__f__('log','at pages/API/request-payment/request-payment/request-payment-uni-pay.uvue:372','success: ', res);\r\n        let user_order_success = res.getBoolean('user_order_success');\r\n        if (user_order_success != null && user_order_success != true) {\r\n          // 代表用户已付款，且你自己写的回调成功并正确执行了\r\n\r\n        } else {\r\n          // 代表用户已付款，但你自己写的回调执行失败（通常是因为你的回调代码有问题）\r\n\r\n        }\r\n      },\r\n      // 监听事件 - 支付失败\r\n      onFail(err : UTSJSONObject) {\r\n        uni.__f__('log','at pages/API/request-payment/request-payment/request-payment-uni-pay.uvue:384','fail: ', err)\r\n\r\n      },\r\n      // 监听事件 - 取消支付\r\n      onCancel(err : UTSJSONObject) {\r\n        uni.__f__('log','at pages/API/request-payment/request-payment/request-payment-uni-pay.uvue:389','cancel: ', err)\r\n        uni.showToast({\r\n          title: \"用户取消了支付\",\r\n          icon: \"none\"\r\n        });\r\n      },\r\n      // 页面跳转\r\n      pageTo(url : string) {\r\n        uni.navigateTo({\r\n          url\r\n        });\r\n      },\r\n      // provider格式化\r\n      providerFormat(provider ?: string) : string {\r\n        if (provider == null) {\r\n          return \"\";\r\n        }\r\n        let providerObj = {\r\n          \"wxpay\": \"微信支付\",\r\n          \"alipay\": \"支付宝支付\",\r\n          \"appleiap\": \"ios内购\"\r\n        } as UTSJSONObject;\r\n        let providerStr = providerObj[provider] as string;\r\n        return providerStr;\r\n      },\r\n      // amount格式化\r\n      amountFormat(totalFee : number | null) : string {\r\n        if (totalFee == null) {\r\n          return \"0\";\r\n        } else {\r\n          return (totalFee / 100).toFixed(2)\r\n        }\r\n      },\r\n      checkUniCloud() : boolean {\r\n        let useUniCloud = false;\r\n        if (typeof uniCloud != 'undefined' && typeof uniCloud.config == \"object\" && uniCloud.config.spaceId != \"\") {\r\n          useUniCloud = true;\r\n        }\r\n        if (!useUniCloud) {\r\n          let errMsg = \"本示例依赖 uniCloud，请先关联服务空间，填写正确的支付配置，支付配置文件地址：/uni_modules/uni-config-center/uniCloud/cloudfunctions/common/uni-config-center/uni-pay/config.js\";\r\n          this.errMsg = errMsg;\r\n          uni.showModal({\r\n            title: \"提示\",\r\n            content: errMsg,\r\n            showCancel: false\r\n          })\r\n          uni.__f__('error','at pages/API/request-payment/request-payment/request-payment-uni-pay.uvue:435',errMsg);\r\n        }\r\n        return useUniCloud;\r\n      }\r\n    },\r\n    computed: {\r\n      // 计算当前H5环境\r\n      h5Env() : string {\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        return \"\";\r\n      },\r\n      // 计算当前是否是ios app\r\n      isIosAppCom() : boolean {\r\n        let info = uni.getSystemInfoSync();\r\n        return info.uniPlatform == 'app' && info.osName == 'ios' ? true : false;\r\n      },\r\n      // 计算当前是否是PC环境\r\n      isPcCom() : boolean {\r\n        let isPC = false;\r\n\r\n\r\n\r\n\r\n        return isPC;\r\n      }\r\n    },\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .app {\r\n    padding: 15px;\r\n  }\r\n\r\n  .input {\r\n    border: 1px solid #f3f3f3;\r\n    padding: 5px;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    height: 40px;\r\n    background: #FFF;\r\n  }\r\n\r\n  .button {\r\n    margin-top: 10px;\r\n  }\r\n\r\n  .label {\r\n    margin: 5px 0;\r\n  }\r\n\r\n  .tips {\r\n    margin: 10px 0;\r\n    font-size: 12px;\r\n    color: #565656;\r\n  }\r\n\r\n  .get-order-popup {\r\n    background-color: #ffffff;\r\n    padding: 15px;\r\n    height: 450px;\r\n    border-radius: 10px;\r\n    width: 100%;\r\n  }\r\n\r\n  .mt20 {\r\n    margin-top: 10px;\r\n  }\r\n\r\n  .pd2030 {\r\n    padding: 10px 15px;\r\n  }\r\n\r\n  .table {\r\n    .table-tr {\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: center;\r\n      align-items: center;\r\n      padding: 5px 0;\r\n    }\r\n\r\n    .table-td {\r\n      flex: 1;\r\n    }\r\n\r\n    .align-left {\r\n      text-align: left;\r\n    }\r\n\r\n    .align-right {\r\n      text-align: right;\r\n    }\r\n\r\n    .label {\r\n      width: 90px;\r\n    }\r\n\r\n    .text {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  .err-msg {\r\n    color: red;\r\n    font-size: 14px;\r\n  }\r\n</style>\r\n","import MiniProgramPage from 'W:/Workplace/2.小程序/lihai-app/pages/API/request-payment/request-payment/request-payment-uni-pay.uvue'\nwx.createPage(MiniProgramPage)"],"names":["defineComponent","uni","uniCloud"],"mappings":"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"}