{"version":3,"file":"create-selector-query.js","sources":["pages/API/create-selector-query/create-selector-query.uvue","../../../Program Files/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvQVBJL2NyZWF0ZS1zZWxlY3Rvci1xdWVyeS9jcmVhdGUtc2VsZWN0b3ItcXVlcnkudXZ1ZQ"],"sourcesContent":["<template>\r\n\r\n\r\n\r\n    <view class=\"page uni-list-cell-db-text\" id=\"page\">\r\n      <page-head :title=\"title\"></page-head>\r\n      <button class=\"btn btn-get-node-info\" @click=\"getNodeInfo\">getNodeInfo</button>\r\n      <button class=\"btn btn-get-all-node-info\" @click=\"getAllNodeInfo\">getAllNodeInfo</button>\r\n      <view id=\"rect-1-2\" class=\"rect-1-2\">\r\n        <view class=\"rect rect1\"></view>\r\n        <view class=\"rect rect2\"></view>\r\n      </view>\r\n      <view class=\"rect-info-1-2\">\r\n        <view class=\"rect-info\" v-for=\"(nodeInfo, index) in nodeInfoList\" :key=\"index\">\r\n          <view class=\"node-info-item\">\r\n            <text class=\"node-info-item-k\">left: </text>\r\n            <text class=\"node-info-item-v\">{{nodeInfo.left}}</text>\r\n          </view>\r\n          <view class=\"node-info-item\">\r\n            <text class=\"node-info-item-k\">top: </text>\r\n            <text class=\"node-info-item-v\">{{nodeInfo.top}}</text>\r\n          </view>\r\n          <view class=\"node-info-item\">\r\n            <text class=\"node-info-item-k\">right: </text>\r\n            <text class=\"node-info-item-v\">{{nodeInfo.right}}</text>\r\n          </view>\r\n          <view class=\"node-info-item\">\r\n            <text class=\"node-info-item-k\">bottom: </text>\r\n            <text class=\"node-info-item-v\">{{nodeInfo.bottom}}</text>\r\n          </view>\r\n          <view class=\"node-info-item\">\r\n            <text class=\"node-info-item-k\">width: </text>\r\n            <text class=\"node-info-item-v\">{{nodeInfo.width}}</text>\r\n          </view>\r\n          <view class=\"node-info-item\">\r\n            <text class=\"node-info-item-k\">height: </text>\r\n            <text class=\"node-info-item-v\">{{nodeInfo.height}}</text>\r\n          </view>\r\n        </view>\r\n      </view>\r\n      <node-child class=\"node-child\"></node-child>\r\n      <text>子组件多根节点</text>\r\n      <multi-child ref=\"multi-child\" id=\"multi-child\"></multi-child>\r\n      <text>子组件多根节点(仅测试，用于验证查询是否超出范围)</text>\r\n      <multi-child id=\"multi-child-2\"></multi-child>\r\n      <view>\r\n        <text>测试.fields</text>\r\n        <text>{{fieldsResultContainNode}}</text>\r\n      </view>\r\n      <view>\r\n        <text>测试.node</text>\r\n        <text>{{nodeResultContainNode}}</text>\r\n      </view>\r\n      <canvas id=\"canvas1\"></canvas>\r\n    </view>\r\n\r\n\r\n\r\n</template>\r\n\r\n<script lang=\"uts\">\r\n  import nodeChild from './nodes-info-child.uvue'\r\n  import multiChild from './selector-query-child-multi.uvue'\r\n\r\n  type NodeInfoType = {\r\n    left : number | null,\r\n    top : number | null,\r\n    right : number | null,\r\n    bottom : number | null,\r\n    width : number | null,\r\n    height : number | null,\r\n  }\r\n\r\n  export default {\r\n    components: {\r\n      nodeChild,\r\n      multiChild\r\n    },\r\n    data() {\r\n      return {\r\n        title: 'createSelectorQuery',\r\n        nodeInfoList: [] as NodeInfoType[],\r\n        // 仅用于自动化测试\r\n        rootNodeInfo: null as NodeInfoType | null,\r\n        //供自动化测试使用\r\n        // resizeRectValid: false\r\n        // TODO\r\n        selectCount: 0,\r\n        selectAllCount: 0,\r\n        fieldsResultContainNode: false,\r\n        nodeResultContainNode: false\r\n      }\r\n    },\r\n    onLoad() {\r\n      uni.$on('childReady', this.onChildReady)\r\n    },\r\n    onUnload() {\r\n      uni.$off('childReady', this.onChildReady)\r\n    },\r\n    onReady() {\r\n      this.testFields()\r\n      this.testNode()\r\n    },\r\n    onResize() {\r\n      //供自动化测试使用\r\n      /* var rect12Element = uni.getElementById(\"rect-1-2\")\r\n      if(rect12Element != null) {\r\n        var domRect = rect12Element.getBoundingClientRect()\r\n        if(domRect.width > 100) {\r\n          this.resizeRectValid = true\r\n        }\r\n      } */\r\n    },\r\n    methods: {\r\n      // 仅用于自动化测试\r\n      onChildReady() {\r\n        const instance2 = (this.$refs['multi-child'] as ComponentPublicInstance);\r\n        this.selectCount = instance2.$data['selectCount'] as number;\r\n        this.selectAllCount = instance2.$data['selectAllCount'] as number;\r\n      },\r\n      // 仅用于自动化测试\r\n      getRootNodeInfo(selector : string) {\r\n        uni.createSelectorQuery().select(selector).boundingClientRect().exec((ret) => {\r\n          if (ret.length == 1) {\r\n            const nodeInfo = ret[0] as NodeInfo;\r\n            const nodeType = {\r\n              left: nodeInfo.left,\r\n              top: nodeInfo.top,\r\n              right: nodeInfo.right,\r\n              bottom: nodeInfo.bottom,\r\n              width: nodeInfo.width,\r\n              height: nodeInfo.height,\r\n            } as NodeInfoType;\r\n            this.rootNodeInfo = nodeType\r\n          }\r\n        })\r\n      },\r\n      getNodeInfo() {\r\n        uni.createSelectorQuery().select('.rect1').boundingClientRect().exec((ret) => {\r\n          this.nodeInfoList.length = 0\r\n          const i = ret[0] as NodeInfo\r\n          this.nodeInfoList.push({\r\n            left: i.left,\r\n            top: i.top,\r\n            right: i.right,\r\n            bottom: i.bottom,\r\n            width: i.width,\r\n            height: i.height,\r\n          } as NodeInfoType)\r\n        })\r\n      },\r\n      getAllNodeInfo() {\r\n        uni.createSelectorQuery().selectAll('.rect').boundingClientRect().exec((ret) => {\r\n          this.nodeInfoList.length = 0\r\n          const array = ret[0] as NodeInfo[]\r\n          array.forEach((i) => {\r\n            this.nodeInfoList.push({\r\n              left: i.left,\r\n              top: i.top,\r\n              right: i.right,\r\n              bottom: i.bottom,\r\n              width: i.width,\r\n              height: i.height,\r\n            } as NodeInfoType)\r\n          })\r\n        })\r\n      },\r\n      // test .fields\r\n      testFields() {\r\n        uni.createSelectorQuery().select('.rect1').fields({\r\n          node: true\r\n        } as NodeField, (ret) => {\r\n          const isElement = (ret as NodeInfo).node instanceof UniElement\r\n          if (isElement) {\r\n            this.fieldsResultContainNode = true\r\n          } else {\r\n            this.fieldsResultContainNode = false\r\n          }\r\n        }).exec()\r\n      },\r\n      // test .node\r\n      testNode() {\r\n        uni.createSelectorQuery().select('#canvas1').node((ret) => {\r\n          const isElement = (ret as NodeInfo).node instanceof UniElement\r\n          const isCanvasElement = ((ret as NodeInfo).node as UniCanvasElement).tagName == 'CANVAS'\r\n          if (isElement && isCanvasElement) {\r\n            this.nodeResultContainNode = true\r\n          } else {\r\n            this.nodeResultContainNode = false\r\n          }\r\n        }).exec()\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .page {\r\n    padding: 15px;\r\n  }\r\n\r\n  .btn {\r\n    margin-top: 15px;\r\n  }\r\n\r\n  .rect-1-2 {\r\n    flex-direction: row;\r\n    margin-top: 15px;\r\n  }\r\n\r\n  .rect {\r\n    width: 150px;\r\n    height: 100px;\r\n  }\r\n\r\n  .rect1 {\r\n    background-color: dodgerblue;\r\n  }\r\n\r\n  .rect2 {\r\n    margin-left: auto;\r\n    background-color: seagreen;\r\n  }\r\n\r\n  .rect-info-1-2 {\r\n    flex-direction: row;\r\n    margin-top: 15px;\r\n  }\r\n\r\n  .rect-info {\r\n    flex: 1;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .node-info-item {\r\n    flex-direction: row;\r\n  }\r\n\r\n  .node-info-item-k {\r\n    width: 72px;\r\n    line-height: 2;\r\n  }\r\n\r\n  .node-info-item-v {\r\n    font-weight: bold;\r\n    line-height: 2;\r\n  }\r\n</style>\r\n","import MiniProgramPage from 'W:/Workplace/2.小程序/lihai-app/pages/API/create-selector-query/create-selector-query.uvue'\nwx.createPage(MiniProgramPage)"],"names":["defineComponent","uni","UniElement"],"mappings":"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"}